{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Emitters = void 0;\n\nvar EmitterInstance_1 = require(\"./EmitterInstance\");\n\nvar Utils_1 = require(\"../../Utils\");\n\nvar Emitter_1 = require(\"./Options/Classes/Emitter\");\n\nvar Enums_1 = require(\"./Enums\");\n\nvar Emitters = /*#__PURE__*/function () {\n  function Emitters(container) {\n    _classCallCheck(this, Emitters);\n\n    this.container = container;\n    this.array = [];\n    this.emitters = [];\n    this.interactivityEmitters = [];\n  }\n\n  _createClass(Emitters, [{\n    key: \"init\",\n    value: function init(options) {\n      var _a, _b;\n\n      if (!options) {\n        return;\n      }\n\n      if (options.emitters) {\n        if (options.emitters instanceof Array) {\n          this.emitters = options.emitters.map(function (s) {\n            var tmp = new Emitter_1.Emitter();\n            tmp.load(s);\n            return tmp;\n          });\n        } else {\n          if (this.emitters instanceof Array) {\n            this.emitters = new Emitter_1.Emitter();\n          }\n\n          this.emitters.load(options.emitters);\n        }\n      }\n\n      var interactivityEmitters = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n\n      if (interactivityEmitters) {\n        if (interactivityEmitters instanceof Array) {\n          this.interactivityEmitters = interactivityEmitters.map(function (s) {\n            var tmp = new Emitter_1.Emitter();\n            tmp.load(s);\n            return tmp;\n          });\n        } else {\n          if (this.interactivityEmitters instanceof Array) {\n            this.interactivityEmitters = new Emitter_1.Emitter();\n          }\n\n          this.interactivityEmitters.load(interactivityEmitters);\n        }\n      }\n\n      if (this.emitters instanceof Array) {\n        var _iterator = _createForOfIteratorHelper(this.emitters),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var emitterOptions = _step.value;\n            var emitter = new EmitterInstance_1.EmitterInstance(this, this.container, emitterOptions);\n            this.addEmitter(emitter);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      } else {\n        var _emitterOptions = this.emitters;\n\n        var _emitter = new EmitterInstance_1.EmitterInstance(this, this.container, _emitterOptions);\n\n        this.addEmitter(_emitter);\n      }\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      var _iterator2 = _createForOfIteratorHelper(this.array),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var emitter = _step2.value;\n          emitter.play();\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      var _iterator3 = _createForOfIteratorHelper(this.array),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var emitter = _step3.value;\n          emitter.pause();\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.array = [];\n    }\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      var container = this.container;\n      var emitterOptions = this.emitters;\n      var modeEmitters = this.interactivityEmitters;\n\n      if (mode === Enums_1.EmitterClickMode.emitter) {\n        var emitterModeOptions;\n\n        if (modeEmitters instanceof Array) {\n          if (modeEmitters.length > 0) {\n            emitterModeOptions = Utils_1.Utils.itemFromArray(modeEmitters);\n          }\n        } else {\n          emitterModeOptions = modeEmitters;\n        }\n\n        var emittersOptions = emitterModeOptions !== null && emitterModeOptions !== void 0 ? emitterModeOptions : emitterOptions instanceof Array ? Utils_1.Utils.itemFromArray(emitterOptions) : emitterOptions;\n        var ePosition = container.interactivity.mouse.clickPosition;\n        var emitter = new EmitterInstance_1.EmitterInstance(this, this.container, Utils_1.Utils.deepExtend({}, emittersOptions), ePosition);\n        this.addEmitter(emitter);\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var _iterator4 = _createForOfIteratorHelper(this.array),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var emitter = _step4.value;\n          emitter.resize();\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"addEmitter\",\n    value: function addEmitter(emitter) {\n      this.array.push(emitter);\n    }\n  }, {\n    key: \"removeEmitter\",\n    value: function removeEmitter(emitter) {\n      var index = this.array.indexOf(emitter);\n\n      if (index >= 0) {\n        this.array.splice(index, 1);\n      }\n    }\n  }]);\n\n  return Emitters;\n}();\n\nexports.Emitters = Emitters;","map":{"version":3,"sources":["/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/tsparticles/dist/Plugins/Emitters/Emitters.js"],"names":["Object","defineProperty","exports","value","Emitters","EmitterInstance_1","require","Utils_1","Emitter_1","Enums_1","container","array","emitters","interactivityEmitters","options","_a","_b","Array","map","s","tmp","Emitter","load","interactivity","modes","emitterOptions","emitter","EmitterInstance","addEmitter","play","pause","mode","modeEmitters","EmitterClickMode","emitterModeOptions","length","Utils","itemFromArray","emittersOptions","ePosition","mouse","clickPosition","deepExtend","resize","push","index","indexOf","splice"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitters = void 0;\nconst EmitterInstance_1 = require(\"./EmitterInstance\");\nconst Utils_1 = require(\"../../Utils\");\nconst Emitter_1 = require(\"./Options/Classes/Emitter\");\nconst Enums_1 = require(\"./Enums\");\nclass Emitters {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = [];\n    }\n    init(options) {\n        var _a, _b;\n        if (!options) {\n            return;\n        }\n        if (options.emitters) {\n            if (options.emitters instanceof Array) {\n                this.emitters = options.emitters.map((s) => {\n                    const tmp = new Emitter_1.Emitter();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.emitters instanceof Array) {\n                    this.emitters = new Emitter_1.Emitter();\n                }\n                this.emitters.load(options.emitters);\n            }\n        }\n        const interactivityEmitters = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n        if (interactivityEmitters) {\n            if (interactivityEmitters instanceof Array) {\n                this.interactivityEmitters = interactivityEmitters.map((s) => {\n                    const tmp = new Emitter_1.Emitter();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.interactivityEmitters instanceof Array) {\n                    this.interactivityEmitters = new Emitter_1.Emitter();\n                }\n                this.interactivityEmitters.load(interactivityEmitters);\n            }\n        }\n        if (this.emitters instanceof Array) {\n            for (const emitterOptions of this.emitters) {\n                const emitter = new EmitterInstance_1.EmitterInstance(this, this.container, emitterOptions);\n                this.addEmitter(emitter);\n            }\n        }\n        else {\n            const emitterOptions = this.emitters;\n            const emitter = new EmitterInstance_1.EmitterInstance(this, this.container, emitterOptions);\n            this.addEmitter(emitter);\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    handleClickMode(mode) {\n        const container = this.container;\n        const emitterOptions = this.emitters;\n        const modeEmitters = this.interactivityEmitters;\n        if (mode === Enums_1.EmitterClickMode.emitter) {\n            let emitterModeOptions;\n            if (modeEmitters instanceof Array) {\n                if (modeEmitters.length > 0) {\n                    emitterModeOptions = Utils_1.Utils.itemFromArray(modeEmitters);\n                }\n            }\n            else {\n                emitterModeOptions = modeEmitters;\n            }\n            const emittersOptions = emitterModeOptions !== null && emitterModeOptions !== void 0 ? emitterModeOptions : (emitterOptions instanceof Array ? Utils_1.Utils.itemFromArray(emitterOptions) : emitterOptions);\n            const ePosition = container.interactivity.mouse.clickPosition;\n            const emitter = new EmitterInstance_1.EmitterInstance(this, this.container, Utils_1.Utils.deepExtend({}, emittersOptions), ePosition);\n            this.addEmitter(emitter);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    addEmitter(emitter) {\n        this.array.push(emitter);\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n}\nexports.Emitters = Emitters;\n"]},"metadata":{},"sourceType":"script"}