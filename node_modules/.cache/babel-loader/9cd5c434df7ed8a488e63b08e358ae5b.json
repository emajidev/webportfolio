{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _createForOfIteratorHelper = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TextDrawer = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar Utils_1 = require(\"../Utils\");\n\nvar Enums_1 = require(\"../Enums\");\n\nvar TextDrawer = /*#__PURE__*/function () {\n  function TextDrawer() {\n    _classCallCheck(this, TextDrawer);\n  }\n\n  _createClass(TextDrawer, [{\n    key: \"init\",\n    value: function init(container) {\n      var _a;\n\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var options, shapeOptions, _iterator, _step, character;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = container.options;\n\n                if (!(Utils_1.Utils.isInArray(Enums_1.ShapeType.char, options.particles.shape.type) || Utils_1.Utils.isInArray(Enums_1.ShapeType.character, options.particles.shape.type))) {\n                  _context.next = 26;\n                  break;\n                }\n\n                shapeOptions = (_a = options.particles.shape.options[Enums_1.ShapeType.character]) !== null && _a !== void 0 ? _a : options.particles.shape.options[Enums_1.ShapeType.char];\n\n                if (!(shapeOptions instanceof Array)) {\n                  _context.next = 23;\n                  break;\n                }\n\n                _iterator = _createForOfIteratorHelper(shapeOptions);\n                _context.prev = 5;\n\n                _iterator.s();\n\n              case 7:\n                if ((_step = _iterator.n()).done) {\n                  _context.next = 13;\n                  break;\n                }\n\n                character = _step.value;\n                _context.next = 11;\n                return Utils_1.Utils.loadFont(character);\n\n              case 11:\n                _context.next = 7;\n                break;\n\n              case 13:\n                _context.next = 18;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](5);\n\n                _iterator.e(_context.t0);\n\n              case 18:\n                _context.prev = 18;\n\n                _iterator.f();\n\n                return _context.finish(18);\n\n              case 21:\n                _context.next = 26;\n                break;\n\n              case 23:\n                if (!(shapeOptions !== undefined)) {\n                  _context.next = 26;\n                  break;\n                }\n\n                _context.next = 26;\n                return Utils_1.Utils.loadFont(shapeOptions);\n\n              case 26:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[5, 15, 18, 21]]);\n      }));\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(context, particle, radius) {\n      var character = particle.shapeData;\n\n      if (character === undefined) {\n        return;\n      }\n\n      var textData = character.value;\n\n      if (textData === undefined) {\n        return;\n      }\n\n      var textParticle = particle;\n\n      if (textParticle.text === undefined) {\n        textParticle.text = textData instanceof Array ? Utils_1.Utils.itemFromArray(textData, particle.randomIndexData) : textData;\n      }\n\n      var text = textParticle.text;\n      var style = character.style;\n      var weight = character.weight;\n      var size = Math.round(radius) * 2;\n      var font = character.font;\n      var fill = particle.fill;\n      var offsetX = text.length * radius / 2;\n      context.font = \"\".concat(style, \" \").concat(weight, \" \").concat(size, \"px \\\"\").concat(font, \"\\\"\");\n      var pos = {\n        x: -offsetX,\n        y: radius / 2\n      };\n\n      if (fill) {\n        context.fillText(text, pos.x, pos.y);\n      } else {\n        context.strokeText(text, pos.x, pos.y);\n      }\n    }\n  }]);\n\n  return TextDrawer;\n}();\n\nexports.TextDrawer = TextDrawer;","map":{"version":3,"sources":["/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/tsparticles/dist/ShapeDrawers/TextDrawer.js"],"names":["Object","defineProperty","exports","value","TextDrawer","tslib_1","require","Utils_1","Enums_1","container","_a","__awaiter","options","Utils","isInArray","ShapeType","char","particles","shape","type","character","shapeOptions","Array","loadFont","undefined","context","particle","radius","shapeData","textData","textParticle","text","itemFromArray","randomIndexData","style","weight","size","Math","round","font","fill","offsetX","length","pos","x","y","fillText","strokeText"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextDrawer = void 0;\nconst tslib_1 = require(\"tslib\");\nconst Utils_1 = require(\"../Utils\");\nconst Enums_1 = require(\"../Enums\");\nclass TextDrawer {\n    init(container) {\n        var _a;\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const options = container.options;\n            if (Utils_1.Utils.isInArray(Enums_1.ShapeType.char, options.particles.shape.type) ||\n                Utils_1.Utils.isInArray(Enums_1.ShapeType.character, options.particles.shape.type)) {\n                const shapeOptions = ((_a = options.particles.shape.options[Enums_1.ShapeType.character]) !== null && _a !== void 0 ? _a : options.particles.shape.options[Enums_1.ShapeType.char]);\n                if (shapeOptions instanceof Array) {\n                    for (const character of shapeOptions) {\n                        yield Utils_1.Utils.loadFont(character);\n                    }\n                }\n                else {\n                    if (shapeOptions !== undefined) {\n                        yield Utils_1.Utils.loadFont(shapeOptions);\n                    }\n                }\n            }\n        });\n    }\n    draw(context, particle, radius) {\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        const textParticle = particle;\n        if (textParticle.text === undefined) {\n            textParticle.text =\n                textData instanceof Array ? Utils_1.Utils.itemFromArray(textData, particle.randomIndexData) : textData;\n        }\n        const text = textParticle.text;\n        const style = character.style;\n        const weight = character.weight;\n        const size = Math.round(radius) * 2;\n        const font = character.font;\n        const fill = particle.fill;\n        const offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n    }\n}\nexports.TextDrawer = TextDrawer;\n"]},"metadata":{},"sourceType":"script"}