{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _createForOfIteratorHelper = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ImageDrawer = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar Utils_1 = require(\"../Utils\");\n\nvar Enums_1 = require(\"../Enums\");\n\nvar ImageDrawer = /*#__PURE__*/function () {\n  function ImageDrawer() {\n    _classCallCheck(this, ImageDrawer);\n\n    this.images = [];\n  }\n\n  _createClass(ImageDrawer, [{\n    key: \"getImages\",\n    value: function getImages(container) {\n      var containerImages = this.images.filter(function (t) {\n        return t.id === container.id;\n      });\n\n      if (!containerImages.length) {\n        this.images.push({\n          id: container.id,\n          images: []\n        });\n        return this.getImages(container);\n      } else {\n        return containerImages[0];\n      }\n    }\n  }, {\n    key: \"addImage\",\n    value: function addImage(container, image) {\n      var containerImages = this.getImages(container);\n      containerImages === null || containerImages === void 0 ? void 0 : containerImages.images.push(image);\n    }\n  }, {\n    key: \"init\",\n    value: function init(container) {\n      var _a;\n\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var options, shapeOptions, imageOptions, _iterator, _step, optionsImage;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = container.options;\n                shapeOptions = options.particles.shape;\n\n                if (!(!Utils_1.Utils.isInArray(Enums_1.ShapeType.image, shapeOptions.type) && !Utils_1.Utils.isInArray(Enums_1.ShapeType.images, shapeOptions.type))) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 4:\n                imageOptions = (_a = shapeOptions.options[Enums_1.ShapeType.images]) !== null && _a !== void 0 ? _a : shapeOptions.options[Enums_1.ShapeType.image];\n\n                if (!(imageOptions instanceof Array)) {\n                  _context.next = 25;\n                  break;\n                }\n\n                _iterator = _createForOfIteratorHelper(imageOptions);\n                _context.prev = 7;\n\n                _iterator.s();\n\n              case 9:\n                if ((_step = _iterator.n()).done) {\n                  _context.next = 15;\n                  break;\n                }\n\n                optionsImage = _step.value;\n                _context.next = 13;\n                return this.loadImageShape(container, optionsImage);\n\n              case 13:\n                _context.next = 9;\n                break;\n\n              case 15:\n                _context.next = 20;\n                break;\n\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](7);\n\n                _iterator.e(_context.t0);\n\n              case 20:\n                _context.prev = 20;\n\n                _iterator.f();\n\n                return _context.finish(20);\n\n              case 23:\n                _context.next = 27;\n                break;\n\n              case 25:\n                _context.next = 27;\n                return this.loadImageShape(container, imageOptions);\n\n              case 27:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[7, 17, 20, 23]]);\n      }));\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.images = [];\n    }\n  }, {\n    key: \"loadImageShape\",\n    value: function loadImageShape(container, imageShape) {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var image;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n\n                if (!imageShape.replaceColor) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                _context2.next = 4;\n                return Utils_1.Utils.downloadSvgImage(imageShape.src);\n\n              case 4:\n                _context2.t0 = _context2.sent;\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.next = 9;\n                return Utils_1.Utils.loadImage(imageShape.src);\n\n              case 9:\n                _context2.t0 = _context2.sent;\n\n              case 10:\n                image = _context2.t0;\n                this.addImage(container, image);\n                _context2.next = 17;\n                break;\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t1 = _context2[\"catch\"](0);\n                console.warn(\"tsParticles error - \".concat(imageShape.src, \" not found\"));\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 14]]);\n      }));\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(context, particle, radius, opacity) {\n      var _a, _b;\n\n      if (!context) {\n        return;\n      }\n\n      var image = particle.image;\n      var element = (_a = image === null || image === void 0 ? void 0 : image.data) === null || _a === void 0 ? void 0 : _a.element;\n\n      if (!element) {\n        return;\n      }\n\n      var ratio = (_b = image === null || image === void 0 ? void 0 : image.ratio) !== null && _b !== void 0 ? _b : 1;\n      var pos = {\n        x: -radius,\n        y: -radius\n      };\n\n      if (!(image === null || image === void 0 ? void 0 : image.data.svgData) || !(image === null || image === void 0 ? void 0 : image.replaceColor)) {\n        context.globalAlpha = opacity;\n      }\n\n      context.drawImage(element, pos.x, pos.y, radius * 2, radius * 2 / ratio);\n\n      if (!(image === null || image === void 0 ? void 0 : image.data.svgData) || !(image === null || image === void 0 ? void 0 : image.replaceColor)) {\n        context.globalAlpha = 1;\n      }\n    }\n  }]);\n\n  return ImageDrawer;\n}();\n\nexports.ImageDrawer = ImageDrawer;","map":{"version":3,"sources":["/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/tsparticles/dist/ShapeDrawers/ImageDrawer.js"],"names":["Object","defineProperty","exports","value","ImageDrawer","tslib_1","require","Utils_1","Enums_1","images","container","containerImages","filter","t","id","length","push","getImages","image","_a","__awaiter","options","shapeOptions","particles","shape","Utils","isInArray","ShapeType","type","imageOptions","Array","optionsImage","loadImageShape","imageShape","replaceColor","downloadSvgImage","src","loadImage","addImage","console","warn","context","particle","radius","opacity","_b","element","data","ratio","pos","x","y","svgData","globalAlpha","drawImage"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImageDrawer = void 0;\nconst tslib_1 = require(\"tslib\");\nconst Utils_1 = require(\"../Utils\");\nconst Enums_1 = require(\"../Enums\");\nclass ImageDrawer {\n    constructor() {\n        this.images = [];\n    }\n    getImages(container) {\n        const containerImages = this.images.filter((t) => t.id === container.id);\n        if (!containerImages.length) {\n            this.images.push({\n                id: container.id,\n                images: [],\n            });\n            return this.getImages(container);\n        }\n        else {\n            return containerImages[0];\n        }\n    }\n    addImage(container, image) {\n        const containerImages = this.getImages(container);\n        containerImages === null || containerImages === void 0 ? void 0 : containerImages.images.push(image);\n    }\n    init(container) {\n        var _a;\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const options = container.options;\n            const shapeOptions = options.particles.shape;\n            if (!Utils_1.Utils.isInArray(Enums_1.ShapeType.image, shapeOptions.type) &&\n                !Utils_1.Utils.isInArray(Enums_1.ShapeType.images, shapeOptions.type)) {\n                return;\n            }\n            const imageOptions = (_a = shapeOptions.options[Enums_1.ShapeType.images]) !== null && _a !== void 0 ? _a : shapeOptions.options[Enums_1.ShapeType.image];\n            if (imageOptions instanceof Array) {\n                for (const optionsImage of imageOptions) {\n                    yield this.loadImageShape(container, optionsImage);\n                }\n            }\n            else {\n                yield this.loadImageShape(container, imageOptions);\n            }\n        });\n    }\n    destroy() {\n        this.images = [];\n    }\n    loadImageShape(container, imageShape) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            try {\n                const image = imageShape.replaceColor\n                    ? yield Utils_1.Utils.downloadSvgImage(imageShape.src)\n                    : yield Utils_1.Utils.loadImage(imageShape.src);\n                this.addImage(container, image);\n            }\n            catch (_a) {\n                console.warn(`tsParticles error - ${imageShape.src} not found`);\n            }\n        });\n    }\n    draw(context, particle, radius, opacity) {\n        var _a, _b;\n        if (!context) {\n            return;\n        }\n        const image = particle.image;\n        const element = (_a = image === null || image === void 0 ? void 0 : image.data) === null || _a === void 0 ? void 0 : _a.element;\n        if (!element) {\n            return;\n        }\n        const ratio = (_b = image === null || image === void 0 ? void 0 : image.ratio) !== null && _b !== void 0 ? _b : 1;\n        const pos = {\n            x: -radius,\n            y: -radius,\n        };\n        if (!(image === null || image === void 0 ? void 0 : image.data.svgData) || !(image === null || image === void 0 ? void 0 : image.replaceColor)) {\n            context.globalAlpha = opacity;\n        }\n        context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        if (!(image === null || image === void 0 ? void 0 : image.data.svgData) || !(image === null || image === void 0 ? void 0 : image.replaceColor)) {\n            context.globalAlpha = 1;\n        }\n    }\n}\nexports.ImageDrawer = ImageDrawer;\n"]},"metadata":{},"sourceType":"script"}