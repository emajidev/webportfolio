{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Retina = void 0;\n\nvar Utils_1 = require(\"../Utils\");\n\nvar Retina = /*#__PURE__*/function () {\n  function Retina(container) {\n    _classCallCheck(this, Retina);\n\n    this.container = container;\n  }\n\n  _createClass(Retina, [{\n    key: \"init\",\n    value: function init() {\n      var container = this.container;\n      var options = container.options;\n\n      if (options.detectRetina) {\n        this.pixelRatio = Utils_1.Utils.isSsr() ? 1 : window.devicePixelRatio;\n      } else {\n        this.pixelRatio = 1;\n      }\n\n      var ratio = this.pixelRatio;\n\n      if (container.canvas.element) {\n        var element = container.canvas.element;\n        container.canvas.size.width = element.offsetWidth * ratio;\n        container.canvas.size.height = element.offsetHeight * ratio;\n      }\n\n      var particles = options.particles;\n      this.linksDistance = particles.links.distance * ratio;\n      this.linksWidth = particles.links.width * ratio;\n      this.moveSpeed = particles.move.speed * ratio;\n      this.sizeValue = particles.size.value * ratio;\n      this.sizeAnimationSpeed = particles.size.animation.speed * ratio;\n      var modes = options.interactivity.modes;\n      this.connectModeDistance = modes.connect.distance * ratio;\n      this.connectModeRadius = modes.connect.radius * ratio;\n      this.grabModeDistance = modes.grab.distance * ratio;\n      this.repulseModeDistance = modes.repulse.distance * ratio;\n      this.attractModeDistance = modes.attract.distance * ratio;\n      this.slowModeRadius = modes.slow.radius * ratio;\n      this.bubbleModeDistance = modes.bubble.distance * ratio;\n\n      if (modes.bubble.size) {\n        this.bubbleModeSize = modes.bubble.size * ratio;\n      }\n    }\n  }, {\n    key: \"initParticle\",\n    value: function initParticle(particle) {\n      var particlesOptions = particle.particlesOptions;\n      var ratio = this.pixelRatio;\n      particle.linksDistance = particlesOptions.links.distance * ratio;\n      particle.linksWidth = particlesOptions.links.width * ratio;\n      particle.moveSpeed = particlesOptions.move.speed * ratio;\n      particle.sizeValue = particlesOptions.size.value * ratio;\n\n      if (typeof particlesOptions.size.random !== \"boolean\") {\n        particle.randomMinimumSize = particlesOptions.size.random.minimumValue * ratio;\n      }\n\n      particle.sizeAnimationSpeed = particlesOptions.size.animation.speed * ratio;\n    }\n  }]);\n\n  return Retina;\n}();\n\nexports.Retina = Retina;","map":{"version":3,"sources":["/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/tsparticles/dist/Core/Retina.js"],"names":["Object","defineProperty","exports","value","Retina","Utils_1","require","container","options","detectRetina","pixelRatio","Utils","isSsr","window","devicePixelRatio","ratio","canvas","element","size","width","offsetWidth","height","offsetHeight","particles","linksDistance","links","distance","linksWidth","moveSpeed","move","speed","sizeValue","sizeAnimationSpeed","animation","modes","interactivity","connectModeDistance","connect","connectModeRadius","radius","grabModeDistance","grab","repulseModeDistance","repulse","attractModeDistance","attract","slowModeRadius","slow","bubbleModeDistance","bubble","bubbleModeSize","particle","particlesOptions","random","randomMinimumSize","minimumValue"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Retina = void 0;\nconst Utils_1 = require(\"../Utils\");\nclass Retina {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n        const container = this.container;\n        const options = container.options;\n        if (options.detectRetina) {\n            this.pixelRatio = Utils_1.Utils.isSsr() ? 1 : window.devicePixelRatio;\n        }\n        else {\n            this.pixelRatio = 1;\n        }\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles;\n        this.linksDistance = particles.links.distance * ratio;\n        this.linksWidth = particles.links.width * ratio;\n        this.moveSpeed = particles.move.speed * ratio;\n        this.sizeValue = particles.size.value * ratio;\n        this.sizeAnimationSpeed = particles.size.animation.speed * ratio;\n        const modes = options.interactivity.modes;\n        this.connectModeDistance = modes.connect.distance * ratio;\n        this.connectModeRadius = modes.connect.radius * ratio;\n        this.grabModeDistance = modes.grab.distance * ratio;\n        this.repulseModeDistance = modes.repulse.distance * ratio;\n        this.attractModeDistance = modes.attract.distance * ratio;\n        this.slowModeRadius = modes.slow.radius * ratio;\n        this.bubbleModeDistance = modes.bubble.distance * ratio;\n        if (modes.bubble.size) {\n            this.bubbleModeSize = modes.bubble.size * ratio;\n        }\n    }\n    initParticle(particle) {\n        const particlesOptions = particle.particlesOptions;\n        const ratio = this.pixelRatio;\n        particle.linksDistance = particlesOptions.links.distance * ratio;\n        particle.linksWidth = particlesOptions.links.width * ratio;\n        particle.moveSpeed = particlesOptions.move.speed * ratio;\n        particle.sizeValue = particlesOptions.size.value * ratio;\n        if (typeof particlesOptions.size.random !== \"boolean\") {\n            particle.randomMinimumSize = particlesOptions.size.random.minimumValue * ratio;\n        }\n        particle.sizeAnimationSpeed = particlesOptions.size.animation.speed * ratio;\n    }\n}\nexports.Retina = Retina;\n"]},"metadata":{},"sourceType":"script"}