{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Particle = void 0;\n\nvar Updater_1 = require(\"./Particle/Updater\");\n\nvar Particles_1 = require(\"../Options/Classes/Particles/Particles\");\n\nvar Shape_1 = require(\"../Options/Classes/Particles/Shape/Shape\");\n\nvar Enums_1 = require(\"../Enums\");\n\nvar Utils_1 = require(\"../Utils\");\n\nvar Infecter_1 = require(\"./Particle/Infecter\");\n\nvar Mover_1 = require(\"./Particle/Mover\");\n\nvar Particle = /*#__PURE__*/function () {\n  function Particle(container, position, overrideOptions) {\n    _classCallCheck(this, Particle);\n\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n\n    this.container = container;\n    this.fill = true;\n    this.close = true;\n    this.links = [];\n    this.lastNoiseTime = 0;\n    this.destroyed = false;\n    var options = container.options;\n    var particlesOptions = new Particles_1.Particles();\n    particlesOptions.load(options.particles);\n    var shapeType = particlesOptions.shape.type;\n    this.shape = shapeType instanceof Array ? Utils_1.Utils.itemFromArray(shapeType) : shapeType;\n\n    if (overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) {\n      if (overrideOptions.shape.type) {\n        var overrideShapeType = overrideOptions.shape.type;\n        this.shape = overrideShapeType instanceof Array ? Utils_1.Utils.itemFromArray(overrideShapeType) : overrideShapeType;\n      }\n\n      var shapeOptions = new Shape_1.Shape();\n      shapeOptions.load(overrideOptions.shape);\n\n      if (this.shape) {\n        var shapeData = shapeOptions.options[this.shape];\n\n        if (shapeData) {\n          this.shapeData = Utils_1.Utils.deepExtend({}, shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData) : shapeData);\n        }\n      }\n    } else {\n      var _shapeData = particlesOptions.shape.options[this.shape];\n\n      if (_shapeData) {\n        this.shapeData = Utils_1.Utils.deepExtend({}, _shapeData instanceof Array ? Utils_1.Utils.itemFromArray(_shapeData) : _shapeData);\n      }\n    }\n\n    if (overrideOptions !== undefined) {\n      particlesOptions.load(overrideOptions);\n    }\n\n    if (((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles) !== undefined) {\n      particlesOptions.load((_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.particles);\n    }\n\n    this.fill = (_d = (_c = this.shapeData) === null || _c === void 0 ? void 0 : _c.fill) !== null && _d !== void 0 ? _d : this.fill;\n    this.close = (_f = (_e = this.shapeData) === null || _e === void 0 ? void 0 : _e.close) !== null && _f !== void 0 ? _f : this.close;\n    this.particlesOptions = particlesOptions;\n    var noiseDelay = this.particlesOptions.move.noise.delay;\n    this.noiseDelay = (noiseDelay.random.enable ? Utils_1.Utils.randomInRange(noiseDelay.random.minimumValue, noiseDelay.value) : noiseDelay.value) * 1000;\n    container.retina.initParticle(this);\n    var color = this.particlesOptions.color;\n    var sizeValue = (_g = this.sizeValue) !== null && _g !== void 0 ? _g : container.retina.sizeValue;\n    var randomSize = typeof this.particlesOptions.size.random === \"boolean\" ? this.particlesOptions.size.random : this.particlesOptions.size.random.enable;\n    this.size = {\n      value: randomSize && this.randomMinimumSize !== undefined ? Utils_1.Utils.randomInRange(this.randomMinimumSize, sizeValue) : sizeValue\n    };\n    this.direction = this.particlesOptions.move.direction;\n    this.bubble = {\n      inRange: false\n    };\n    this.initialVelocity = this.calculateVelocity();\n    this.velocity = {\n      horizontal: this.initialVelocity.horizontal,\n      vertical: this.initialVelocity.vertical\n    };\n    var rotateOptions = this.particlesOptions.rotate;\n    var degAngle = rotateOptions.random ? Math.random() * 360 : rotateOptions.value;\n    this.angle = degAngle * Math.PI / 180;\n    this.pathAngle = Math.atan2(this.initialVelocity.vertical, this.initialVelocity.horizontal);\n    this.rotateDirection = rotateOptions.direction;\n\n    if (this.rotateDirection === Enums_1.RotateDirection.random) {\n      var index = Math.floor(Math.random() * 2);\n      this.rotateDirection = index > 0 ? Enums_1.RotateDirection.counterClockwise : Enums_1.RotateDirection.clockwise;\n    }\n\n    var sizeAnimation = this.particlesOptions.size.animation;\n\n    if (sizeAnimation.enable) {\n      switch (sizeAnimation.startValue) {\n        case Enums_1.StartValueType.min:\n          if (!randomSize) {\n            var pxRatio = container.retina.pixelRatio;\n            this.size.value = sizeAnimation.minimumValue * pxRatio;\n          }\n\n          break;\n      }\n\n      this.size.status = Enums_1.SizeAnimationStatus.increasing;\n      this.size.velocity = ((_h = this.sizeAnimationSpeed) !== null && _h !== void 0 ? _h : container.retina.sizeAnimationSpeed) / 100;\n\n      if (!sizeAnimation.sync) {\n        this.size.velocity *= Math.random();\n      }\n    }\n\n    this.color = Utils_1.ColorUtils.colorToHsl(color);\n    var colorAnimation = this.particlesOptions.color.animation;\n\n    if (colorAnimation.enable) {\n      this.colorVelocity = colorAnimation.speed / 100;\n\n      if (!colorAnimation.sync) {\n        this.colorVelocity = this.colorVelocity * Math.random();\n      }\n    } else {\n      this.colorVelocity = 0;\n    }\n\n    if (colorAnimation.enable && !colorAnimation.sync && this.color) {\n      this.color.h = Math.random() * 360;\n    }\n\n    this.position = this.calcPosition(this.container, position);\n    this.offset = {\n      x: 0,\n      y: 0\n    };\n\n    if (this.particlesOptions.collisions.enable && !this.checkOverlap(position)) {\n      throw new Error();\n    }\n\n    var opacityOptions = this.particlesOptions.opacity;\n    var randomOpacity = opacityOptions.random;\n    var opacityValue = opacityOptions.value;\n    this.opacity = {\n      value: randomOpacity.enable ? Utils_1.Utils.randomInRange(randomOpacity.minimumValue, opacityValue) : opacityValue\n    };\n    var opacityAnimation = opacityOptions.animation;\n\n    if (opacityAnimation.enable) {\n      this.opacity.status = Enums_1.OpacityAnimationStatus.increasing;\n      this.opacity.velocity = opacityAnimation.speed / 100;\n\n      if (!opacityAnimation.sync) {\n        this.opacity.velocity *= Math.random();\n      }\n    }\n\n    var drawer = container.drawers.get(this.shape);\n\n    if (!drawer) {\n      drawer = Utils_1.Plugins.getShapeDrawer(this.shape);\n\n      if (drawer) {\n        container.drawers.set(this.shape, drawer);\n      }\n    }\n\n    var imageShape = this.loadImageShape(container, drawer);\n\n    if (imageShape) {\n      this.image = imageShape.image;\n      this.fill = imageShape.fill;\n      this.close = imageShape.close;\n    }\n\n    this.stroke = this.particlesOptions.stroke instanceof Array ? Utils_1.Utils.itemFromArray(this.particlesOptions.stroke) : this.particlesOptions.stroke;\n    this.strokeWidth = this.stroke.width * container.retina.pixelRatio;\n    this.strokeColor = Utils_1.ColorUtils.colorToHsl(this.stroke.color);\n\n    if (typeof this.stroke.color !== \"string\") {\n      var strokeColorAnimation = (_j = this.stroke.color) === null || _j === void 0 ? void 0 : _j.animation;\n\n      if (strokeColorAnimation && this.strokeColor) {\n        if (strokeColorAnimation.enable) {\n          this.strokeColorVelocity = colorAnimation.speed / 100;\n\n          if (!strokeColorAnimation.sync) {\n            this.strokeColorVelocity = this.strokeColorVelocity * Math.random();\n          }\n        } else {\n          this.strokeColorVelocity = 0;\n        }\n\n        if (strokeColorAnimation.enable && !strokeColorAnimation.sync && this.color) {\n          this.strokeColor.h = Math.random() * 360;\n        }\n      }\n    }\n\n    this.shadowColor = Utils_1.ColorUtils.colorToRgb(this.particlesOptions.shadow.color);\n    this.updater = new Updater_1.Updater(container, this);\n    this.infecter = new Infecter_1.Infecter(container, this);\n    this.mover = new Mover_1.Mover(container, this);\n  }\n\n  _createClass(Particle, [{\n    key: \"move\",\n    value: function move(delta) {\n      this.mover.move(delta);\n    }\n  }, {\n    key: \"update\",\n    value: function update(delta) {\n      this.updater.update(delta);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(delta) {\n      this.container.canvas.drawParticle(this, delta);\n    }\n  }, {\n    key: \"isOverlapping\",\n    value: function isOverlapping() {\n      var _this = this;\n\n      var container = this.container;\n      var collisionFound = false;\n      var pos1 = this.getPosition();\n\n      var _iterator = _createForOfIteratorHelper(container.particles.array.filter(function (t) {\n        return t != _this;\n      })),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var p2 = _step.value;\n          var pos2 = p2.getPosition();\n          var dist = Utils_1.Utils.getDistance(pos1, pos2);\n\n          if (dist <= this.size.value + p2.size.value) {\n            collisionFound = true;\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return collisionFound;\n    }\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      return {\n        x: this.position.x + this.offset.x,\n        y: this.position.y + this.offset.y\n      };\n    }\n  }, {\n    key: \"getFillColor\",\n    value: function getFillColor() {\n      var _a;\n\n      return (_a = this.bubble.color) !== null && _a !== void 0 ? _a : this.color;\n    }\n  }, {\n    key: \"getStrokeColor\",\n    value: function getStrokeColor() {\n      var _a, _b;\n\n      return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : this.strokeColor) !== null && _b !== void 0 ? _b : this.color;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.destroyed = true;\n    }\n  }, {\n    key: \"checkOverlap\",\n    value: function checkOverlap(position) {\n      var iterations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var container = this.container;\n\n      if (!container.particles.count) {\n        return true;\n      }\n\n      if (iterations >= container.particles.count) {\n        return false;\n      }\n\n      var overlapping = this.isOverlapping();\n\n      if (overlapping) {\n        this.position.x = position ? position.x : Math.random() * container.canvas.size.width;\n        this.position.y = position ? position.y : Math.random() * container.canvas.size.height;\n        return this.checkOverlap(undefined, iterations + 1);\n      }\n\n      return true;\n    }\n  }, {\n    key: \"calcPosition\",\n    value: function calcPosition(container, position) {\n      var _a, _b;\n\n      var _iterator2 = _createForOfIteratorHelper(container.plugins),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _step2$value = _slicedToArray(_step2.value, 2),\n              plugin = _step2$value[1];\n\n          var pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n\n          if (pluginPos !== undefined) {\n            return Utils_1.Utils.deepExtend({}, pluginPos);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      var pos = {\n        x: (_a = position === null || position === void 0 ? void 0 : position.x) !== null && _a !== void 0 ? _a : Math.random() * container.canvas.size.width,\n        y: (_b = position === null || position === void 0 ? void 0 : position.y) !== null && _b !== void 0 ? _b : Math.random() * container.canvas.size.height\n      };\n      var outMode = this.particlesOptions.move.outMode;\n\n      if (Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounce) || Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounceHorizontal)) {\n        if (pos.x > container.canvas.size.width - this.size.value * 2) {\n          pos.x -= this.size.value;\n        } else if (pos.x < this.size.value * 2) {\n          pos.x += this.size.value;\n        }\n      }\n\n      if (Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounce) || Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounceVertical)) {\n        if (pos.y > container.canvas.size.height - this.size.value * 2) {\n          pos.y -= this.size.value;\n        } else if (pos.y < this.size.value * 2) {\n          pos.y += this.size.value;\n        }\n      }\n\n      return pos;\n    }\n  }, {\n    key: \"calculateVelocity\",\n    value: function calculateVelocity() {\n      var baseVelocity = Utils_1.Utils.getParticleBaseVelocity(this);\n      var res = {\n        horizontal: 0,\n        vertical: 0\n      };\n      var moveOptions = this.particlesOptions.move;\n      var rad;\n      var radOffset = Math.PI / 4;\n\n      if (typeof moveOptions.angle === \"number\") {\n        rad = Math.PI / 180 * moveOptions.angle;\n      } else {\n        rad = Math.PI / 180 * moveOptions.angle.value;\n        radOffset = Math.PI / 180 * moveOptions.angle.offset;\n      }\n\n      var range = {\n        left: Math.sin(radOffset + rad / 2) - Math.sin(radOffset - rad / 2),\n        right: Math.cos(radOffset + rad / 2) - Math.cos(radOffset - rad / 2)\n      };\n\n      if (moveOptions.straight) {\n        res.horizontal = baseVelocity.x;\n        res.vertical = baseVelocity.y;\n\n        if (moveOptions.random) {\n          res.horizontal += Utils_1.Utils.randomInRange(range.left, range.right) / 2;\n          res.vertical += Utils_1.Utils.randomInRange(range.left, range.right) / 2;\n        }\n      } else {\n        res.horizontal = baseVelocity.x + Utils_1.Utils.randomInRange(range.left, range.right) / 2;\n        res.vertical = baseVelocity.y + Utils_1.Utils.randomInRange(range.left, range.right) / 2;\n      }\n\n      return res;\n    }\n  }, {\n    key: \"loadImageShape\",\n    value: function loadImageShape(container, drawer) {\n      var _this2 = this;\n\n      var _a, _b, _c, _d;\n\n      if (!(this.shape === Enums_1.ShapeType.image || this.shape === Enums_1.ShapeType.images)) {\n        return;\n      }\n\n      var shape = this.particlesOptions.shape;\n      var imageDrawer = drawer;\n      var imagesOptions = shape.options[this.shape];\n      var images = imageDrawer.getImages(container).images;\n      var image = Utils_1.Utils.itemFromArray(images);\n      var optionsImage = imagesOptions instanceof Array ? imagesOptions.find(function (t) {\n        return t.src === image.source;\n      }) : imagesOptions;\n      var color = this.getFillColor();\n      var imageRes;\n\n      if ((image === null || image === void 0 ? void 0 : image.svgData) !== undefined && optionsImage.replaceColor && color) {\n        var svgColoredData = Utils_1.ColorUtils.replaceColorSvg(image, color, this.opacity.value);\n        var svg = new Blob([svgColoredData], {\n          type: \"image/svg+xml\"\n        });\n        var domUrl = window.URL || window.webkitURL || window;\n        var url = domUrl.createObjectURL(svg);\n        var img = new Image();\n        imageRes = {\n          data: image,\n          loaded: false,\n          ratio: optionsImage.width / optionsImage.height,\n          replaceColor: (_a = optionsImage.replaceColor) !== null && _a !== void 0 ? _a : optionsImage.replace_color,\n          source: optionsImage.src\n        };\n        img.addEventListener(\"load\", function () {\n          if (_this2.image) {\n            _this2.image.loaded = true;\n            image.element = img;\n          }\n\n          domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", function () {\n          domUrl.revokeObjectURL(url);\n          Utils_1.Utils.loadImage(optionsImage.src).then(function (img2) {\n            if (_this2.image) {\n              image.element = img2.element;\n              _this2.image.loaded = true;\n            }\n          });\n        });\n        img.src = url;\n      } else {\n        imageRes = {\n          data: image,\n          loaded: true,\n          ratio: optionsImage.width / optionsImage.height,\n          replaceColor: (_b = optionsImage.replaceColor) !== null && _b !== void 0 ? _b : optionsImage.replace_color,\n          source: optionsImage.src\n        };\n      }\n\n      if (!imageRes.ratio) {\n        imageRes.ratio = 1;\n      }\n\n      var fill = (_c = optionsImage.fill) !== null && _c !== void 0 ? _c : this.fill;\n      var close = (_d = optionsImage.close) !== null && _d !== void 0 ? _d : this.close;\n      return {\n        image: imageRes,\n        fill: fill,\n        close: close\n      };\n    }\n  }]);\n\n  return Particle;\n}();\n\nexports.Particle = Particle;","map":{"version":3,"sources":["/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/tsparticles/dist/Core/Particle.js"],"names":["Object","defineProperty","exports","value","Particle","Updater_1","require","Particles_1","Shape_1","Enums_1","Utils_1","Infecter_1","Mover_1","container","position","overrideOptions","_a","_b","_c","_d","_e","_f","_g","_h","_j","fill","close","links","lastNoiseTime","destroyed","options","particlesOptions","Particles","load","particles","shapeType","shape","type","Array","Utils","itemFromArray","overrideShapeType","shapeOptions","Shape","shapeData","deepExtend","undefined","noiseDelay","move","noise","delay","random","enable","randomInRange","minimumValue","retina","initParticle","color","sizeValue","randomSize","size","randomMinimumSize","direction","bubble","inRange","initialVelocity","calculateVelocity","velocity","horizontal","vertical","rotateOptions","rotate","degAngle","Math","angle","PI","pathAngle","atan2","rotateDirection","RotateDirection","index","floor","counterClockwise","clockwise","sizeAnimation","animation","startValue","StartValueType","min","pxRatio","pixelRatio","status","SizeAnimationStatus","increasing","sizeAnimationSpeed","sync","ColorUtils","colorToHsl","colorAnimation","colorVelocity","speed","h","calcPosition","offset","x","y","collisions","checkOverlap","Error","opacityOptions","opacity","randomOpacity","opacityValue","opacityAnimation","OpacityAnimationStatus","drawer","drawers","get","Plugins","getShapeDrawer","set","imageShape","loadImageShape","image","stroke","strokeWidth","width","strokeColor","strokeColorAnimation","strokeColorVelocity","shadowColor","colorToRgb","shadow","updater","Updater","infecter","Infecter","mover","Mover","delta","update","canvas","drawParticle","collisionFound","pos1","getPosition","array","filter","t","p2","pos2","dist","getDistance","iterations","count","overlapping","isOverlapping","height","plugins","plugin","pluginPos","particlePosition","pos","outMode","isInArray","OutMode","bounce","bounceHorizontal","bounceVertical","baseVelocity","getParticleBaseVelocity","res","moveOptions","rad","radOffset","range","left","sin","right","cos","straight","ShapeType","images","imageDrawer","imagesOptions","getImages","optionsImage","find","src","source","getFillColor","imageRes","svgData","replaceColor","svgColoredData","replaceColorSvg","svg","Blob","domUrl","window","URL","webkitURL","url","createObjectURL","img","Image","data","loaded","ratio","replace_color","addEventListener","element","revokeObjectURL","loadImage","then","img2"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Particle = void 0;\nconst Updater_1 = require(\"./Particle/Updater\");\nconst Particles_1 = require(\"../Options/Classes/Particles/Particles\");\nconst Shape_1 = require(\"../Options/Classes/Particles/Shape/Shape\");\nconst Enums_1 = require(\"../Enums\");\nconst Utils_1 = require(\"../Utils\");\nconst Infecter_1 = require(\"./Particle/Infecter\");\nconst Mover_1 = require(\"./Particle/Mover\");\nclass Particle {\n    constructor(container, position, overrideOptions) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        this.container = container;\n        this.fill = true;\n        this.close = true;\n        this.links = [];\n        this.lastNoiseTime = 0;\n        this.destroyed = false;\n        const options = container.options;\n        const particlesOptions = new Particles_1.Particles();\n        particlesOptions.load(options.particles);\n        const shapeType = particlesOptions.shape.type;\n        this.shape = shapeType instanceof Array ? Utils_1.Utils.itemFromArray(shapeType) : shapeType;\n        if (overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) {\n            if (overrideOptions.shape.type) {\n                const overrideShapeType = overrideOptions.shape.type;\n                this.shape =\n                    overrideShapeType instanceof Array ? Utils_1.Utils.itemFromArray(overrideShapeType) : overrideShapeType;\n            }\n            const shapeOptions = new Shape_1.Shape();\n            shapeOptions.load(overrideOptions.shape);\n            if (this.shape) {\n                const shapeData = shapeOptions.options[this.shape];\n                if (shapeData) {\n                    this.shapeData = Utils_1.Utils.deepExtend({}, shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData) : shapeData);\n                }\n            }\n        }\n        else {\n            const shapeData = particlesOptions.shape.options[this.shape];\n            if (shapeData) {\n                this.shapeData = Utils_1.Utils.deepExtend({}, shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData) : shapeData);\n            }\n        }\n        if (overrideOptions !== undefined) {\n            particlesOptions.load(overrideOptions);\n        }\n        if (((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles) !== undefined) {\n            particlesOptions.load((_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.particles);\n        }\n        this.fill = (_d = (_c = this.shapeData) === null || _c === void 0 ? void 0 : _c.fill) !== null && _d !== void 0 ? _d : this.fill;\n        this.close = (_f = (_e = this.shapeData) === null || _e === void 0 ? void 0 : _e.close) !== null && _f !== void 0 ? _f : this.close;\n        this.particlesOptions = particlesOptions;\n        const noiseDelay = this.particlesOptions.move.noise.delay;\n        this.noiseDelay =\n            (noiseDelay.random.enable\n                ? Utils_1.Utils.randomInRange(noiseDelay.random.minimumValue, noiseDelay.value)\n                : noiseDelay.value) * 1000;\n        container.retina.initParticle(this);\n        const color = this.particlesOptions.color;\n        const sizeValue = (_g = this.sizeValue) !== null && _g !== void 0 ? _g : container.retina.sizeValue;\n        const randomSize = typeof this.particlesOptions.size.random === \"boolean\"\n            ? this.particlesOptions.size.random\n            : this.particlesOptions.size.random.enable;\n        this.size = {\n            value: randomSize && this.randomMinimumSize !== undefined\n                ? Utils_1.Utils.randomInRange(this.randomMinimumSize, sizeValue)\n                : sizeValue,\n        };\n        this.direction = this.particlesOptions.move.direction;\n        this.bubble = {\n            inRange: false,\n        };\n        this.initialVelocity = this.calculateVelocity();\n        this.velocity = {\n            horizontal: this.initialVelocity.horizontal,\n            vertical: this.initialVelocity.vertical,\n        };\n        const rotateOptions = this.particlesOptions.rotate;\n        const degAngle = rotateOptions.random ? Math.random() * 360 : rotateOptions.value;\n        this.angle = (degAngle * Math.PI) / 180;\n        this.pathAngle = Math.atan2(this.initialVelocity.vertical, this.initialVelocity.horizontal);\n        this.rotateDirection = rotateOptions.direction;\n        if (this.rotateDirection === Enums_1.RotateDirection.random) {\n            const index = Math.floor(Math.random() * 2);\n            this.rotateDirection = index > 0 ? Enums_1.RotateDirection.counterClockwise : Enums_1.RotateDirection.clockwise;\n        }\n        const sizeAnimation = this.particlesOptions.size.animation;\n        if (sizeAnimation.enable) {\n            switch (sizeAnimation.startValue) {\n                case Enums_1.StartValueType.min:\n                    if (!randomSize) {\n                        const pxRatio = container.retina.pixelRatio;\n                        this.size.value = sizeAnimation.minimumValue * pxRatio;\n                    }\n                    break;\n            }\n            this.size.status = Enums_1.SizeAnimationStatus.increasing;\n            this.size.velocity = ((_h = this.sizeAnimationSpeed) !== null && _h !== void 0 ? _h : container.retina.sizeAnimationSpeed) / 100;\n            if (!sizeAnimation.sync) {\n                this.size.velocity *= Math.random();\n            }\n        }\n        this.color = Utils_1.ColorUtils.colorToHsl(color);\n        const colorAnimation = this.particlesOptions.color.animation;\n        if (colorAnimation.enable) {\n            this.colorVelocity = colorAnimation.speed / 100;\n            if (!colorAnimation.sync) {\n                this.colorVelocity = this.colorVelocity * Math.random();\n            }\n        }\n        else {\n            this.colorVelocity = 0;\n        }\n        if (colorAnimation.enable && !colorAnimation.sync && this.color) {\n            this.color.h = Math.random() * 360;\n        }\n        this.position = this.calcPosition(this.container, position);\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        if (this.particlesOptions.collisions.enable && !this.checkOverlap(position)) {\n            throw new Error();\n        }\n        const opacityOptions = this.particlesOptions.opacity;\n        const randomOpacity = opacityOptions.random;\n        const opacityValue = opacityOptions.value;\n        this.opacity = {\n            value: randomOpacity.enable ? Utils_1.Utils.randomInRange(randomOpacity.minimumValue, opacityValue) : opacityValue,\n        };\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            this.opacity.status = Enums_1.OpacityAnimationStatus.increasing;\n            this.opacity.velocity = opacityAnimation.speed / 100;\n            if (!opacityAnimation.sync) {\n                this.opacity.velocity *= Math.random();\n            }\n        }\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = Utils_1.Plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        const imageShape = this.loadImageShape(container, drawer);\n        if (imageShape) {\n            this.image = imageShape.image;\n            this.fill = imageShape.fill;\n            this.close = imageShape.close;\n        }\n        this.stroke =\n            this.particlesOptions.stroke instanceof Array\n                ? Utils_1.Utils.itemFromArray(this.particlesOptions.stroke)\n                : this.particlesOptions.stroke;\n        this.strokeWidth = this.stroke.width * container.retina.pixelRatio;\n        this.strokeColor = Utils_1.ColorUtils.colorToHsl(this.stroke.color);\n        if (typeof this.stroke.color !== \"string\") {\n            const strokeColorAnimation = (_j = this.stroke.color) === null || _j === void 0 ? void 0 : _j.animation;\n            if (strokeColorAnimation && this.strokeColor) {\n                if (strokeColorAnimation.enable) {\n                    this.strokeColorVelocity = colorAnimation.speed / 100;\n                    if (!strokeColorAnimation.sync) {\n                        this.strokeColorVelocity = this.strokeColorVelocity * Math.random();\n                    }\n                }\n                else {\n                    this.strokeColorVelocity = 0;\n                }\n                if (strokeColorAnimation.enable && !strokeColorAnimation.sync && this.color) {\n                    this.strokeColor.h = Math.random() * 360;\n                }\n            }\n        }\n        this.shadowColor = Utils_1.ColorUtils.colorToRgb(this.particlesOptions.shadow.color);\n        this.updater = new Updater_1.Updater(container, this);\n        this.infecter = new Infecter_1.Infecter(container, this);\n        this.mover = new Mover_1.Mover(container, this);\n    }\n    move(delta) {\n        this.mover.move(delta);\n    }\n    update(delta) {\n        this.updater.update(delta);\n    }\n    draw(delta) {\n        this.container.canvas.drawParticle(this, delta);\n    }\n    isOverlapping() {\n        const container = this.container;\n        let collisionFound = false;\n        const pos1 = this.getPosition();\n        for (const p2 of container.particles.array.filter((t) => t != this)) {\n            const pos2 = p2.getPosition();\n            const dist = Utils_1.Utils.getDistance(pos1, pos2);\n            if (dist <= this.size.value + p2.size.value) {\n                collisionFound = true;\n                break;\n            }\n        }\n        return collisionFound;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n        };\n    }\n    getFillColor() {\n        var _a;\n        return (_a = this.bubble.color) !== null && _a !== void 0 ? _a : this.color;\n    }\n    getStrokeColor() {\n        var _a, _b;\n        return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : this.strokeColor) !== null && _b !== void 0 ? _b : this.color;\n    }\n    destroy() {\n        this.destroyed = true;\n    }\n    checkOverlap(position, iterations = 0) {\n        const container = this.container;\n        if (!container.particles.count) {\n            return true;\n        }\n        if (iterations >= container.particles.count) {\n            return false;\n        }\n        const overlapping = this.isOverlapping();\n        if (overlapping) {\n            this.position.x = position ? position.x : Math.random() * container.canvas.size.width;\n            this.position.y = position ? position.y : Math.random() * container.canvas.size.height;\n            return this.checkOverlap(undefined, iterations + 1);\n        }\n        return true;\n    }\n    calcPosition(container, position) {\n        var _a, _b;\n        for (const [, plugin] of container.plugins) {\n            const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n            if (pluginPos !== undefined) {\n                return Utils_1.Utils.deepExtend({}, pluginPos);\n            }\n        }\n        const pos = {\n            x: (_a = position === null || position === void 0 ? void 0 : position.x) !== null && _a !== void 0 ? _a : Math.random() * container.canvas.size.width,\n            y: (_b = position === null || position === void 0 ? void 0 : position.y) !== null && _b !== void 0 ? _b : Math.random() * container.canvas.size.height,\n        };\n        const outMode = this.particlesOptions.move.outMode;\n        if (Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounce) || Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounceHorizontal)) {\n            if (pos.x > container.canvas.size.width - this.size.value * 2) {\n                pos.x -= this.size.value;\n            }\n            else if (pos.x < this.size.value * 2) {\n                pos.x += this.size.value;\n            }\n        }\n        if (Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounce) || Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounceVertical)) {\n            if (pos.y > container.canvas.size.height - this.size.value * 2) {\n                pos.y -= this.size.value;\n            }\n            else if (pos.y < this.size.value * 2) {\n                pos.y += this.size.value;\n            }\n        }\n        return pos;\n    }\n    calculateVelocity() {\n        const baseVelocity = Utils_1.Utils.getParticleBaseVelocity(this);\n        const res = {\n            horizontal: 0,\n            vertical: 0,\n        };\n        const moveOptions = this.particlesOptions.move;\n        let rad;\n        let radOffset = Math.PI / 4;\n        if (typeof moveOptions.angle === \"number\") {\n            rad = (Math.PI / 180) * moveOptions.angle;\n        }\n        else {\n            rad = (Math.PI / 180) * moveOptions.angle.value;\n            radOffset = (Math.PI / 180) * moveOptions.angle.offset;\n        }\n        const range = {\n            left: Math.sin(radOffset + rad / 2) - Math.sin(radOffset - rad / 2),\n            right: Math.cos(radOffset + rad / 2) - Math.cos(radOffset - rad / 2),\n        };\n        if (moveOptions.straight) {\n            res.horizontal = baseVelocity.x;\n            res.vertical = baseVelocity.y;\n            if (moveOptions.random) {\n                res.horizontal += Utils_1.Utils.randomInRange(range.left, range.right) / 2;\n                res.vertical += Utils_1.Utils.randomInRange(range.left, range.right) / 2;\n            }\n        }\n        else {\n            res.horizontal = baseVelocity.x + Utils_1.Utils.randomInRange(range.left, range.right) / 2;\n            res.vertical = baseVelocity.y + Utils_1.Utils.randomInRange(range.left, range.right) / 2;\n        }\n        return res;\n    }\n    loadImageShape(container, drawer) {\n        var _a, _b, _c, _d;\n        if (!(this.shape === Enums_1.ShapeType.image || this.shape === Enums_1.ShapeType.images)) {\n            return;\n        }\n        const shape = this.particlesOptions.shape;\n        const imageDrawer = drawer;\n        const imagesOptions = shape.options[this.shape];\n        const images = imageDrawer.getImages(container).images;\n        const image = Utils_1.Utils.itemFromArray(images);\n        const optionsImage = (imagesOptions instanceof Array\n            ? imagesOptions.find((t) => t.src === image.source)\n            : imagesOptions);\n        const color = this.getFillColor();\n        let imageRes;\n        if ((image === null || image === void 0 ? void 0 : image.svgData) !== undefined && optionsImage.replaceColor && color) {\n            const svgColoredData = Utils_1.ColorUtils.replaceColorSvg(image, color, this.opacity.value);\n            const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" });\n            const domUrl = window.URL || window.webkitURL || window;\n            const url = domUrl.createObjectURL(svg);\n            const img = new Image();\n            imageRes = {\n                data: image,\n                loaded: false,\n                ratio: optionsImage.width / optionsImage.height,\n                replaceColor: (_a = optionsImage.replaceColor) !== null && _a !== void 0 ? _a : optionsImage.replace_color,\n                source: optionsImage.src,\n            };\n            img.addEventListener(\"load\", () => {\n                if (this.image) {\n                    this.image.loaded = true;\n                    image.element = img;\n                }\n                domUrl.revokeObjectURL(url);\n            });\n            img.addEventListener(\"error\", () => {\n                domUrl.revokeObjectURL(url);\n                Utils_1.Utils.loadImage(optionsImage.src).then((img2) => {\n                    if (this.image) {\n                        image.element = img2.element;\n                        this.image.loaded = true;\n                    }\n                });\n            });\n            img.src = url;\n        }\n        else {\n            imageRes = {\n                data: image,\n                loaded: true,\n                ratio: optionsImage.width / optionsImage.height,\n                replaceColor: (_b = optionsImage.replaceColor) !== null && _b !== void 0 ? _b : optionsImage.replace_color,\n                source: optionsImage.src,\n            };\n        }\n        if (!imageRes.ratio) {\n            imageRes.ratio = 1;\n        }\n        const fill = (_c = optionsImage.fill) !== null && _c !== void 0 ? _c : this.fill;\n        const close = (_d = optionsImage.close) !== null && _d !== void 0 ? _d : this.close;\n        return {\n            image: imageRes,\n            fill,\n            close,\n        };\n    }\n}\nexports.Particle = Particle;\n"]},"metadata":{},"sourceType":"script"}