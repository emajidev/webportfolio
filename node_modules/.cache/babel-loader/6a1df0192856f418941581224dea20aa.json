{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Bubbler = void 0;\n\nvar Utils_1 = require(\"../../../../Utils\");\n\nvar Enums_1 = require(\"../../../../Enums\");\n\nvar Bubbler = /*#__PURE__*/function () {\n  function Bubbler(container) {\n    _classCallCheck(this, Bubbler);\n\n    this.container = container;\n  }\n\n  _createClass(Bubbler, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      var container = this.container;\n      var options = container.options;\n      var mouse = container.interactivity.mouse;\n      var events = options.interactivity.events;\n      var divs = events.onDiv;\n      var divBubble = Utils_1.Utils.isDivModeEnabled(Enums_1.DivMode.bubble, divs);\n\n      if (!(divBubble || events.onHover.enable && mouse.position || events.onClick.enable && mouse.clickPosition)) {\n        return false;\n      }\n\n      var hoverMode = events.onHover.mode;\n      var clickMode = events.onClick.mode;\n      return Utils_1.Utils.isInArray(Enums_1.HoverMode.bubble, hoverMode) || Utils_1.Utils.isInArray(Enums_1.ClickMode.bubble, clickMode) || divBubble;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset(particle, force) {\n      if (!particle.bubble.inRange || force) {\n        delete particle.bubble.divId;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n      }\n    }\n  }, {\n    key: \"interact\",\n    value: function interact() {\n      var _this = this;\n\n      var options = this.container.options;\n      var events = options.interactivity.events;\n      var onHover = events.onHover;\n      var onClick = events.onClick;\n      var hoverEnabled = onHover.enable;\n      var hoverMode = onHover.mode;\n      var clickEnabled = onClick.enable;\n      var clickMode = onClick.mode;\n      var divs = events.onDiv;\n\n      if (hoverEnabled && Utils_1.Utils.isInArray(Enums_1.HoverMode.bubble, hoverMode)) {\n        this.hoverBubble();\n      } else if (clickEnabled && Utils_1.Utils.isInArray(Enums_1.ClickMode.bubble, clickMode)) {\n        this.clickBubble();\n      } else {\n        Utils_1.Utils.divModeExecute(Enums_1.DivMode.bubble, divs, function (id, div) {\n          return _this.singleDivHover(id, div);\n        });\n      }\n    }\n  }, {\n    key: \"singleDivHover\",\n    value: function singleDivHover(id, div) {\n      var container = this.container;\n      var elem = document.getElementById(id);\n\n      if (!elem) {\n        return;\n      }\n\n      var pxRatio = container.retina.pixelRatio;\n      var pos = {\n        x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n        y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio\n      };\n      var repulseRadius = elem.offsetWidth / 2 * pxRatio;\n      var area = div.type === Enums_1.DivType.circle ? new Utils_1.Circle(pos.x, pos.y, repulseRadius) : new Utils_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio);\n      var query = container.particles.quadTree.query(area);\n\n      var _iterator = _createForOfIteratorHelper(query.filter(function (t) {\n        return area.contains(t.getPosition());\n      })),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var particle = _step.value;\n          particle.bubble.inRange = true;\n          var divs = container.options.interactivity.modes.bubble.divs;\n          var divBubble = Utils_1.Utils.divMode(divs, id);\n\n          if (!particle.bubble.divId || particle.bubble.divId !== id) {\n            this.reset(particle, true);\n            particle.bubble.divId = id;\n          }\n\n          this.hoverBubbleSize(particle, 1, divBubble);\n          this.hoverBubbleOpacity(particle, 1, divBubble);\n          this.hoverBubbleColor(particle, divBubble);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"process\",\n    value: function process(particle, distMouse, timeSpent, data) {\n      var container = this.container;\n      var bubbleParam = data.bubbleObj.optValue;\n\n      if (bubbleParam === undefined) {\n        return;\n      }\n\n      var options = container.options;\n      var bubbleDuration = options.interactivity.modes.bubble.duration;\n      var bubbleDistance = container.retina.bubbleModeDistance;\n      var particlesParam = data.particlesObj.optValue;\n      var pObjBubble = data.bubbleObj.value;\n      var pObj = data.particlesObj.value || 0;\n      var type = data.type;\n\n      if (bubbleParam !== particlesParam) {\n        if (!container.bubble.durationEnd) {\n          if (distMouse <= bubbleDistance) {\n            var obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n\n            if (obj !== bubbleParam) {\n              var value = pObj - timeSpent * (pObj - bubbleParam) / bubbleDuration;\n\n              if (type === Enums_1.ProcessBubbleType.size) {\n                particle.bubble.radius = value;\n              }\n\n              if (type === Enums_1.ProcessBubbleType.opacity) {\n                particle.bubble.opacity = value;\n              }\n            }\n          } else {\n            if (type === Enums_1.ProcessBubbleType.size) {\n              delete particle.bubble.radius;\n            }\n\n            if (type === Enums_1.ProcessBubbleType.opacity) {\n              delete particle.bubble.opacity;\n            }\n          }\n        } else if (pObjBubble) {\n          if (type === Enums_1.ProcessBubbleType.size) {\n            delete particle.bubble.radius;\n          }\n\n          if (type === Enums_1.ProcessBubbleType.opacity) {\n            delete particle.bubble.opacity;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"clickBubble\",\n    value: function clickBubble() {\n      var _a;\n\n      var container = this.container;\n      var options = container.options;\n      var mouseClickPos = container.interactivity.mouse.clickPosition;\n\n      if (mouseClickPos === undefined) {\n        return;\n      }\n\n      var distance = container.retina.bubbleModeDistance;\n      var query = container.particles.quadTree.query(new Utils_1.Circle(mouseClickPos.x, mouseClickPos.y, distance));\n\n      var _iterator2 = _createForOfIteratorHelper(query),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var particle = _step2.value;\n          particle.bubble.inRange = true;\n          var pos = particle.getPosition();\n          var distMouse = Utils_1.Utils.getDistance(pos, mouseClickPos);\n          var timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n\n          if (container.bubble.clicking) {\n            if (timeSpent > options.interactivity.modes.bubble.duration) {\n              container.bubble.durationEnd = true;\n            }\n\n            if (timeSpent > options.interactivity.modes.bubble.duration * 2) {\n              container.bubble.clicking = false;\n              container.bubble.durationEnd = false;\n            }\n\n            var sizeData = {\n              bubbleObj: {\n                optValue: container.retina.bubbleModeSize,\n                value: particle.bubble.radius\n              },\n              particlesObj: {\n                optValue: (_a = particle.sizeValue) !== null && _a !== void 0 ? _a : container.retina.sizeValue,\n                value: particle.size.value\n              },\n              type: Enums_1.ProcessBubbleType.size\n            };\n            this.process(particle, distMouse, timeSpent, sizeData);\n            var opacityData = {\n              bubbleObj: {\n                optValue: options.interactivity.modes.bubble.opacity,\n                value: particle.bubble.opacity\n              },\n              particlesObj: {\n                optValue: particle.particlesOptions.opacity.value,\n                value: particle.opacity.value\n              },\n              type: Enums_1.ProcessBubbleType.opacity\n            };\n            this.process(particle, distMouse, timeSpent, opacityData);\n\n            if (!container.bubble.durationEnd) {\n              if (distMouse <= container.retina.bubbleModeDistance) {\n                this.hoverBubbleColor(particle);\n              } else {\n                delete particle.bubble.color;\n              }\n            } else {\n              delete particle.bubble.color;\n            }\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"hoverBubble\",\n    value: function hoverBubble() {\n      var container = this.container;\n      var mousePos = container.interactivity.mouse.position;\n\n      if (mousePos === undefined) {\n        return;\n      }\n\n      var distance = container.retina.bubbleModeDistance;\n      var query = container.particles.quadTree.query(new Utils_1.Circle(mousePos.x, mousePos.y, distance));\n\n      var _iterator3 = _createForOfIteratorHelper(query),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var particle = _step3.value;\n          particle.bubble.inRange = true;\n          var pos = particle.getPosition();\n\n          var _distance = Utils_1.Utils.getDistance(pos, mousePos);\n\n          var ratio = 1 - _distance / container.retina.bubbleModeDistance;\n\n          if (_distance <= container.retina.bubbleModeDistance) {\n            if (ratio >= 0 && container.interactivity.status === Utils_1.Constants.mouseMoveEvent) {\n              this.hoverBubbleSize(particle, ratio);\n              this.hoverBubbleOpacity(particle, ratio);\n              this.hoverBubbleColor(particle);\n            }\n          } else {\n            this.reset(particle);\n          }\n\n          if (container.interactivity.status === Utils_1.Constants.mouseLeaveEvent) {\n            this.reset(particle);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"hoverBubbleSize\",\n    value: function hoverBubbleSize(particle, ratio, divBubble) {\n      var _a;\n\n      var container = this.container;\n      var modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n\n      if (modeSize === undefined) {\n        return;\n      }\n\n      var optSize = (_a = particle.sizeValue) !== null && _a !== void 0 ? _a : container.retina.sizeValue;\n      var pSize = particle.size.value;\n      var size = Bubbler.calculateBubbleValue(pSize, modeSize, optSize, ratio);\n\n      if (size !== undefined) {\n        particle.bubble.radius = size;\n      }\n    }\n  }, {\n    key: \"hoverBubbleOpacity\",\n    value: function hoverBubbleOpacity(particle, ratio, divBubble) {\n      var _a;\n\n      var options = this.container.options;\n      var modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.opacity;\n\n      if (modeOpacity === undefined) {\n        return;\n      }\n\n      var optOpacity = particle.particlesOptions.opacity.value;\n      var pOpacity = particle.opacity.value;\n      var opacity = Bubbler.calculateBubbleValue(pOpacity, modeOpacity, optOpacity, ratio);\n\n      if (opacity !== undefined) {\n        particle.bubble.opacity = opacity;\n      }\n    }\n  }, {\n    key: \"hoverBubbleColor\",\n    value: function hoverBubbleColor(particle, divBubble) {\n      var _a;\n\n      var options = this.container.options;\n\n      if (particle.bubble.color === undefined) {\n        var modeColor = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.color) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.color;\n\n        if (modeColor === undefined) {\n          return;\n        }\n\n        var bubbleColor = modeColor instanceof Array ? Utils_1.Utils.itemFromArray(modeColor) : modeColor;\n        particle.bubble.color = Utils_1.ColorUtils.colorToHsl(bubbleColor);\n      }\n    }\n  }], [{\n    key: \"calculateBubbleValue\",\n    value: function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n      if (modeValue > optionsValue) {\n        var size = particleValue + (modeValue - optionsValue) * ratio;\n        return Utils_1.Utils.clamp(size, particleValue, modeValue);\n      } else if (modeValue < optionsValue) {\n        var _size = particleValue - (optionsValue - modeValue) * ratio;\n\n        return Utils_1.Utils.clamp(_size, modeValue, particleValue);\n      }\n    }\n  }]);\n\n  return Bubbler;\n}();\n\nexports.Bubbler = Bubbler;","map":{"version":3,"sources":["/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/tsparticles/dist/Core/Particle/Interactions/Mouse/Bubbler.js"],"names":["Object","defineProperty","exports","value","Bubbler","Utils_1","require","Enums_1","container","options","mouse","interactivity","events","divs","onDiv","divBubble","Utils","isDivModeEnabled","DivMode","bubble","onHover","enable","position","onClick","clickPosition","hoverMode","mode","clickMode","isInArray","HoverMode","ClickMode","particle","force","inRange","divId","opacity","radius","color","hoverEnabled","clickEnabled","hoverBubble","clickBubble","divModeExecute","id","div","singleDivHover","elem","document","getElementById","pxRatio","retina","pixelRatio","pos","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","repulseRadius","area","type","DivType","circle","Circle","Rectangle","query","particles","quadTree","filter","t","contains","getPosition","modes","divMode","reset","hoverBubbleSize","hoverBubbleOpacity","hoverBubbleColor","distMouse","timeSpent","data","bubbleParam","bubbleObj","optValue","undefined","bubbleDuration","duration","bubbleDistance","bubbleModeDistance","particlesParam","particlesObj","pObjBubble","pObj","durationEnd","obj","ProcessBubbleType","size","_a","mouseClickPos","distance","getDistance","Date","getTime","clickTime","clicking","sizeData","bubbleModeSize","sizeValue","process","opacityData","particlesOptions","mousePos","ratio","status","Constants","mouseMoveEvent","mouseLeaveEvent","modeSize","optSize","pSize","calculateBubbleValue","modeOpacity","optOpacity","pOpacity","modeColor","bubbleColor","Array","itemFromArray","ColorUtils","colorToHsl","particleValue","modeValue","optionsValue","clamp"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Bubbler = void 0;\nconst Utils_1 = require(\"../../../../Utils\");\nconst Enums_1 = require(\"../../../../Enums\");\nclass Bubbler {\n    constructor(container) {\n        this.container = container;\n    }\n    static calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n        if (modeValue > optionsValue) {\n            const size = particleValue + (modeValue - optionsValue) * ratio;\n            return Utils_1.Utils.clamp(size, particleValue, modeValue);\n        }\n        else if (modeValue < optionsValue) {\n            const size = particleValue - (optionsValue - modeValue) * ratio;\n            return Utils_1.Utils.clamp(size, modeValue, particleValue);\n        }\n    }\n    isEnabled() {\n        const container = this.container;\n        const options = container.options;\n        const mouse = container.interactivity.mouse;\n        const events = options.interactivity.events;\n        const divs = events.onDiv;\n        const divBubble = Utils_1.Utils.isDivModeEnabled(Enums_1.DivMode.bubble, divs);\n        if (!(divBubble || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return (Utils_1.Utils.isInArray(Enums_1.HoverMode.bubble, hoverMode) || Utils_1.Utils.isInArray(Enums_1.ClickMode.bubble, clickMode) || divBubble);\n    }\n    reset(particle, force) {\n        if (!particle.bubble.inRange || force) {\n            delete particle.bubble.divId;\n            delete particle.bubble.opacity;\n            delete particle.bubble.radius;\n            delete particle.bubble.color;\n        }\n    }\n    interact() {\n        const options = this.container.options;\n        const events = options.interactivity.events;\n        const onHover = events.onHover;\n        const onClick = events.onClick;\n        const hoverEnabled = onHover.enable;\n        const hoverMode = onHover.mode;\n        const clickEnabled = onClick.enable;\n        const clickMode = onClick.mode;\n        const divs = events.onDiv;\n        if (hoverEnabled && Utils_1.Utils.isInArray(Enums_1.HoverMode.bubble, hoverMode)) {\n            this.hoverBubble();\n        }\n        else if (clickEnabled && Utils_1.Utils.isInArray(Enums_1.ClickMode.bubble, clickMode)) {\n            this.clickBubble();\n        }\n        else {\n            Utils_1.Utils.divModeExecute(Enums_1.DivMode.bubble, divs, (id, div) => this.singleDivHover(id, div));\n        }\n    }\n    singleDivHover(id, div) {\n        const container = this.container;\n        const elem = document.getElementById(id);\n        if (!elem) {\n            return;\n        }\n        const pxRatio = container.retina.pixelRatio;\n        const pos = {\n            x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n            y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n        };\n        const repulseRadius = (elem.offsetWidth / 2) * pxRatio;\n        const area = div.type === Enums_1.DivType.circle\n            ? new Utils_1.Circle(pos.x, pos.y, repulseRadius)\n            : new Utils_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio);\n        const query = container.particles.quadTree.query(area);\n        for (const particle of query.filter((t) => area.contains(t.getPosition()))) {\n            particle.bubble.inRange = true;\n            const divs = container.options.interactivity.modes.bubble.divs;\n            const divBubble = Utils_1.Utils.divMode(divs, id);\n            if (!particle.bubble.divId || particle.bubble.divId !== id) {\n                this.reset(particle, true);\n                particle.bubble.divId = id;\n            }\n            this.hoverBubbleSize(particle, 1, divBubble);\n            this.hoverBubbleOpacity(particle, 1, divBubble);\n            this.hoverBubbleColor(particle, divBubble);\n        }\n    }\n    process(particle, distMouse, timeSpent, data) {\n        const container = this.container;\n        const bubbleParam = data.bubbleObj.optValue;\n        if (bubbleParam === undefined) {\n            return;\n        }\n        const options = container.options;\n        const bubbleDuration = options.interactivity.modes.bubble.duration;\n        const bubbleDistance = container.retina.bubbleModeDistance;\n        const particlesParam = data.particlesObj.optValue;\n        const pObjBubble = data.bubbleObj.value;\n        const pObj = data.particlesObj.value || 0;\n        const type = data.type;\n        if (bubbleParam !== particlesParam) {\n            if (!container.bubble.durationEnd) {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === Enums_1.ProcessBubbleType.size) {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === Enums_1.ProcessBubbleType.opacity) {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === Enums_1.ProcessBubbleType.size) {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === Enums_1.ProcessBubbleType.opacity) {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else if (pObjBubble) {\n                if (type === Enums_1.ProcessBubbleType.size) {\n                    delete particle.bubble.radius;\n                }\n                if (type === Enums_1.ProcessBubbleType.opacity) {\n                    delete particle.bubble.opacity;\n                }\n            }\n        }\n    }\n    clickBubble() {\n        var _a;\n        const container = this.container;\n        const options = container.options;\n        const mouseClickPos = container.interactivity.mouse.clickPosition;\n        if (mouseClickPos === undefined) {\n            return;\n        }\n        const distance = container.retina.bubbleModeDistance;\n        const query = container.particles.quadTree.query(new Utils_1.Circle(mouseClickPos.x, mouseClickPos.y, distance));\n        for (const particle of query) {\n            particle.bubble.inRange = true;\n            const pos = particle.getPosition();\n            const distMouse = Utils_1.Utils.getDistance(pos, mouseClickPos);\n            const timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n            if (container.bubble.clicking) {\n                if (timeSpent > options.interactivity.modes.bubble.duration) {\n                    container.bubble.durationEnd = true;\n                }\n                if (timeSpent > options.interactivity.modes.bubble.duration * 2) {\n                    container.bubble.clicking = false;\n                    container.bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: (_a = particle.sizeValue) !== null && _a !== void 0 ? _a : container.retina.sizeValue,\n                        value: particle.size.value,\n                    },\n                    type: Enums_1.ProcessBubbleType.size,\n                };\n                this.process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: options.interactivity.modes.bubble.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: particle.particlesOptions.opacity.value,\n                        value: particle.opacity.value,\n                    },\n                    type: Enums_1.ProcessBubbleType.opacity,\n                };\n                this.process(particle, distMouse, timeSpent, opacityData);\n                if (!container.bubble.durationEnd) {\n                    if (distMouse <= container.retina.bubbleModeDistance) {\n                        this.hoverBubbleColor(particle);\n                    }\n                    else {\n                        delete particle.bubble.color;\n                    }\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        }\n    }\n    hoverBubble() {\n        const container = this.container;\n        const mousePos = container.interactivity.mouse.position;\n        if (mousePos === undefined) {\n            return;\n        }\n        const distance = container.retina.bubbleModeDistance;\n        const query = container.particles.quadTree.query(new Utils_1.Circle(mousePos.x, mousePos.y, distance));\n        for (const particle of query) {\n            particle.bubble.inRange = true;\n            const pos = particle.getPosition();\n            const distance = Utils_1.Utils.getDistance(pos, mousePos);\n            const ratio = 1 - distance / container.retina.bubbleModeDistance;\n            if (distance <= container.retina.bubbleModeDistance) {\n                if (ratio >= 0 && container.interactivity.status === Utils_1.Constants.mouseMoveEvent) {\n                    this.hoverBubbleSize(particle, ratio);\n                    this.hoverBubbleOpacity(particle, ratio);\n                    this.hoverBubbleColor(particle);\n                }\n            }\n            else {\n                this.reset(particle);\n            }\n            if (container.interactivity.status === Utils_1.Constants.mouseLeaveEvent) {\n                this.reset(particle);\n            }\n        }\n    }\n    hoverBubbleSize(particle, ratio, divBubble) {\n        var _a;\n        const container = this.container;\n        const modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio\n            : container.retina.bubbleModeSize;\n        if (modeSize === undefined) {\n            return;\n        }\n        const optSize = (_a = particle.sizeValue) !== null && _a !== void 0 ? _a : container.retina.sizeValue;\n        const pSize = particle.size.value;\n        const size = Bubbler.calculateBubbleValue(pSize, modeSize, optSize, ratio);\n        if (size !== undefined) {\n            particle.bubble.radius = size;\n        }\n    }\n    hoverBubbleOpacity(particle, ratio, divBubble) {\n        var _a;\n        const options = this.container.options;\n        const modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.opacity;\n        if (modeOpacity === undefined) {\n            return;\n        }\n        const optOpacity = particle.particlesOptions.opacity.value;\n        const pOpacity = particle.opacity.value;\n        const opacity = Bubbler.calculateBubbleValue(pOpacity, modeOpacity, optOpacity, ratio);\n        if (opacity !== undefined) {\n            particle.bubble.opacity = opacity;\n        }\n    }\n    hoverBubbleColor(particle, divBubble) {\n        var _a;\n        const options = this.container.options;\n        if (particle.bubble.color === undefined) {\n            const modeColor = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.color) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.color;\n            if (modeColor === undefined) {\n                return;\n            }\n            const bubbleColor = modeColor instanceof Array ? Utils_1.Utils.itemFromArray(modeColor) : modeColor;\n            particle.bubble.color = Utils_1.ColorUtils.colorToHsl(bubbleColor);\n        }\n    }\n}\nexports.Bubbler = Bubbler;\n"]},"metadata":{},"sourceType":"script"}