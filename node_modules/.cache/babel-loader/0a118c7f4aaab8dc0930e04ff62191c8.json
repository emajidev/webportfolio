{"ast":null,"code":"var _jsxFileName = \"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/src/Components/Projects.js\";\nimport React, { Component, useState } from \"react\";\nimport { FaRegFileCode, FaGithubAlt } from \"react-icons/fa\";\nimport { Container, Row, Col, Button } from \"reactstrap\";\nimport grid from \"../css/grid.css\";\n\nfunction DetailRepo(props) {\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"infoRepo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"textInfoRepo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, \"Created_at: \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, props.item.created_at)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"infoRepo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"textInfoRepo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, \"Languages: \"), props.listLanguages[props.index].map((len, ilen) => /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginRight: 10\n    },\n    key: ilen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, ilen + 1 < props.listLanguages[props.index].length ? len + \",\" : len + \".\"))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"infoRepo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"textInfoRepo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"Description: \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \" \", props.item.description)), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"infoRepo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"textInfoRepo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Link: \"), /*#__PURE__*/React.createElement(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, props.item.html_url, \" \")));\n}\n\nfunction Item(props) {\n  const [info, setInfo] = useState(false);\n  return /*#__PURE__*/React.createElement(\"li\", {\n    key: props.item.id,\n    className: \"rowRepo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setInfo(!info),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    styles: {\n      fontSize: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FaRegFileCode, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), \" \", props.item.name)), info ? /*#__PURE__*/React.createElement(DetailRepo, {\n    item: props.item,\n    index: props.index,\n    listLanguages: props.listLanguages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }) : console.log(\"\"));\n}\n\nfunction ListRepos(props) {\n  const [info, setInfo] = useState(false);\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"fileRepo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, props.repos.map((item, index) => /*#__PURE__*/React.createElement(Item, {\n    item: item,\n    index: index,\n    listLanguages: props.listLanguages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction GalleryProjects(props) {\n  console.log(\"glr\", props);\n  let newImages = [];\n  let uri, className, dif;\n  let img = new Image();\n  props.repos.map(item => {\n    uri = \"https://raw.githubusercontent.com/emajidev/\" + item.name + \"/master/sample.png\";\n    img.src = uri;\n    dif = img.width / img.height;\n    console.log(item.uri);\n    console.log(\"tama√±o\", img.width, img.height, dif);\n\n    if (dif < 0.5) {\n      className = \"length\";\n    } else if (dif > 2) {\n      className = \"horizontal\";\n    } else {\n      className = \"big\";\n    }\n\n    let data = {\n      url: uri,\n      name: item.name,\n      classItem: className\n    };\n    newImages.push(data);\n  });\n  console.log(\"img\", newImages);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"container-masonry masonry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, newImages.map(repo => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item \" + repo.classItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FrontGround\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, repo.name), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"img-ajust\",\n    src: repo.url,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }))));\n}\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      repos: [],\n      listLanguages: [],\n      file: \"galery\"\n    };\n  }\n\n  getReposGit() {\n    return fetch(\"https://api.github.com/users/emajidev/repos\").then(response => response.json());\n  }\n\n  getLanguages(repos) {\n    let listLanguages = [];\n    var xmlHttp = new XMLHttpRequest();\n    repos.map(item => {\n      xmlHttp.open(\"GET\", item.languages_url, false); // false for synchronous request\n\n      xmlHttp.send(null);\n      let response = JSON.parse(xmlHttp.response);\n      let array = Object.keys(response);\n      listLanguages.push(array);\n    });\n    return listLanguages;\n  }\n\n  async componentDidMount() {\n    let getRepos = await this.getReposGit();\n    let getLanguages = await this.getLanguages(getRepos);\n    this.setState({\n      repos: this.props.repos,\n      listLanguages: this.props.languages\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Projects\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FaGithubAlt, {\n      size: 50,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, \"Projects\"), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, \"Show my repos in Git hub\"), /*#__PURE__*/React.createElement(Row, {\n      className: \"selection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: this.state.file == \"galery\" ? \"select\" : \"none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.setState({\n        file: \"galery\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, \"Mosaik\")), /*#__PURE__*/React.createElement(Col, {\n      className: this.state.file == \"file\" ? \"select\" : \"none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.setState({\n        file: \"file\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }, \"File\"))), this.state.file == \"file\" ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListRepos, {\n      repos: this.state.repos,\n      listLanguages: this.state.listLanguages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(GalleryProjects, {\n      repos: this.state.repos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\nexport default Projects;","map":{"version":3,"sources":["/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/src/Components/Projects.js"],"names":["React","Component","useState","FaRegFileCode","FaGithubAlt","Container","Row","Col","Button","grid","DetailRepo","props","item","created_at","listLanguages","index","map","len","ilen","marginRight","length","description","html_url","Item","info","setInfo","id","fontSize","name","console","log","ListRepos","repos","GalleryProjects","newImages","uri","className","dif","img","Image","src","width","height","data","url","classItem","push","repo","Projects","constructor","state","file","getReposGit","fetch","then","response","json","getLanguages","xmlHttp","XMLHttpRequest","open","languages_url","send","JSON","parse","array","Object","keys","componentDidMount","getRepos","setState","languages","render","textAlign"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport { FaRegFileCode, FaGithubAlt } from \"react-icons/fa\";\nimport { Container, Row, Col, Button } from \"reactstrap\";\n\nimport grid from \"../css/grid.css\";\nfunction DetailRepo(props) {\n  return (\n    <ul>\n      <li className=\"infoRepo\">\n        <p className=\"textInfoRepo\">Created_at: </p>\n        <p>{props.item.created_at}</p>\n      </li>\n      <div className=\"infoRepo\">\n        <p className=\"textInfoRepo\">Languages: </p>\n        {props.listLanguages[props.index].map((len, ilen) => (\n          <p style={{ marginRight: 10 }} key={ilen}>\n            {ilen + 1 < props.listLanguages[props.index].length\n              ? len + \",\"\n              : len + \".\"}\n          </p>\n        ))}\n      </div>\n      <li className=\"infoRepo\">\n        <p className=\"textInfoRepo\">Description: </p>\n        <p> {props.item.description}</p>\n      </li>\n      <li className=\"infoRepo\">\n        <p className=\"textInfoRepo\">Link: </p>\n        <a>{props.item.html_url} </a>\n      </li>\n    </ul>\n  );\n}\nfunction Item(props) {\n  const [info, setInfo] = useState(false);\n  return (\n    <li key={props.item.id} className=\"rowRepo\">\n      <button onClick={() => setInfo(!info)}>\n        <p styles={{ fontSize: 12 }}>\n          <FaRegFileCode size={20} /> {props.item.name}\n        </p>\n      </button>\n      {info ? (\n        <DetailRepo\n          item={props.item}\n          index={props.index}\n          listLanguages={props.listLanguages}\n        />\n      ) : (\n        console.log(\"\")\n      )}\n    </li>\n  );\n}\nfunction ListRepos(props) {\n  const [info, setInfo] = useState(false);\n  return (\n    <ul className=\"fileRepo\">\n      {props.repos.map((item, index) => (\n        <Item item={item} index={index} listLanguages={props.listLanguages} />\n      ))}\n    </ul>\n  );\n}\nfunction GalleryProjects(props) {\n  console.log(\"glr\", props);\n  let newImages = [];\n  let uri, className, dif;\n  let img = new Image();\n  props.repos.map((item) => {\n    uri =\n      \"https://raw.githubusercontent.com/emajidev/\" +\n      item.name +\n      \"/master/sample.png\";\n    img.src = uri;\n    dif = img.width / img.height;\n    console.log(item.uri);\n    console.log(\"tama√±o\", img.width, img.height, dif);\n    if (dif < 0.5) {\n      className = \"length\";\n    } else if (dif > 2) {\n      className = \"horizontal\";\n    } else {\n      className = \"big\";\n    }\n\n    let data = {\n      url: uri,\n      name: item.name,\n      classItem: className,\n    };\n    newImages.push(data);\n  });\n  console.log(\"img\", newImages);\n  return (\n    <div class=\"container-masonry masonry\">\n      {newImages.map((repo) => (\n        <div className={\"item \" + repo.classItem}>\n          <div className=\"FrontGround\">{repo.name}</div>\n          <img className=\"img-ajust\" src={repo.url} alt=\"\" />\n        </div>\n      ))}\n    </div>\n  );\n}\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      repos: [],\n      listLanguages: [],\n      file: \"galery\",\n    };\n  }\n\n  getReposGit() {\n    return fetch(\n      \"https://api.github.com/users/emajidev/repos\"\n    ).then((response) => response.json());\n  }\n  getLanguages(repos) {\n    let listLanguages = [];\n    var xmlHttp = new XMLHttpRequest();\n    repos.map((item) => {\n      xmlHttp.open(\"GET\", item.languages_url, false); // false for synchronous request\n      xmlHttp.send(null);\n      let response = JSON.parse(xmlHttp.response);\n      let array = Object.keys(response);\n      listLanguages.push(array);\n    });\n    return listLanguages;\n  }\n  async componentDidMount() {\n    let getRepos = await this.getReposGit();\n    let getLanguages = await this.getLanguages(getRepos);\n    this.setState({\n      repos: this.props.repos,\n      listLanguages: this.props.languages,\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        <div className=\"Projects\">\n          <FaGithubAlt size={50} />\n          <h4>Projects</h4>\n          <p style={{ textAlign: \"left\" }}>Show my repos in Git hub</p>\n          <Row className=\"selection\">\n            <Col className={this.state.file == \"galery\" ? \"select\" : \"none\"}>\n              <button onClick={() => this.setState({ file: \"galery\" })}>\n                Mosaik\n              </button>\n            </Col>\n            <Col className={this.state.file == \"file\" ? \"select\" : \"none\"}>\n              <button onClick={() => this.setState({ file: \"file\" })}>\n                File\n              </button>\n            </Col>\n          </Row>\n          {this.state.file == \"file\" ? (\n            <div>\n              <ListRepos\n                repos={this.state.repos}\n                listLanguages={this.state.listLanguages}\n              />\n            </div>\n          ) : (\n            <div>\n              <GalleryProjects repos={this.state.repos} />\n            </div>\n          )}\n        </div>\n      </Container>\n    );\n  }\n}\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}