{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Absorbers = void 0;\n\nvar AbsorberInstance_1 = require(\"./AbsorberInstance\");\n\nvar Utils_1 = require(\"../../Utils\");\n\nvar Absorber_1 = require(\"./Options/Classes/Absorber\");\n\nvar Enums_1 = require(\"./Enums\");\n\nvar Absorbers = /*#__PURE__*/function () {\n  function Absorbers(container) {\n    _classCallCheck(this, Absorbers);\n\n    this.container = container;\n    this.array = [];\n    this.absorbers = [];\n    this.interactivityAbsorbers = [];\n  }\n\n  _createClass(Absorbers, [{\n    key: \"init\",\n    value: function init(options) {\n      var _a, _b;\n\n      if (!options) {\n        return;\n      }\n\n      if (options.absorbers) {\n        if (options.absorbers instanceof Array) {\n          this.absorbers = options.absorbers.map(function (s) {\n            var tmp = new Absorber_1.Absorber();\n            tmp.load(s);\n            return tmp;\n          });\n        } else {\n          if (this.absorbers instanceof Array) {\n            this.absorbers = new Absorber_1.Absorber();\n          }\n\n          this.absorbers.load(options.absorbers);\n        }\n      }\n\n      var interactivityAbsorbers = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n\n      if (interactivityAbsorbers) {\n        if (interactivityAbsorbers instanceof Array) {\n          this.interactivityAbsorbers = interactivityAbsorbers.map(function (s) {\n            var tmp = new Absorber_1.Absorber();\n            tmp.load(s);\n            return tmp;\n          });\n        } else {\n          if (this.interactivityAbsorbers instanceof Array) {\n            this.interactivityAbsorbers = new Absorber_1.Absorber();\n          }\n\n          this.interactivityAbsorbers.load(interactivityAbsorbers);\n        }\n      }\n\n      if (this.absorbers instanceof Array) {\n        var _iterator = _createForOfIteratorHelper(this.absorbers),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var absorberOptions = _step.value;\n            var absorber = new AbsorberInstance_1.AbsorberInstance(this, this.container, absorberOptions);\n            this.addAbsorber(absorber);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      } else {\n        var _absorberOptions = this.absorbers;\n\n        var _absorber = new AbsorberInstance_1.AbsorberInstance(this, this.container, _absorberOptions);\n\n        this.addAbsorber(_absorber);\n      }\n    }\n  }, {\n    key: \"particleUpdate\",\n    value: function particleUpdate(particle) {\n      var _iterator2 = _createForOfIteratorHelper(this.array),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var absorber = _step2.value;\n          absorber.attract(particle);\n\n          if (particle.destroyed) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(context) {\n      var _iterator3 = _createForOfIteratorHelper(this.array),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var absorber = _step3.value;\n          context.save();\n          absorber.draw(context);\n          context.restore();\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.array = [];\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var _iterator4 = _createForOfIteratorHelper(this.array),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var absorber = _step4.value;\n          absorber.resize();\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      var container = this.container;\n      var absorberOptions = this.absorbers;\n      var modeAbsorbers = this.interactivityAbsorbers;\n\n      if (mode === Enums_1.AbsorberClickMode.absorber) {\n        var absorbersModeOptions;\n\n        if (modeAbsorbers instanceof Array) {\n          if (modeAbsorbers.length > 0) {\n            absorbersModeOptions = Utils_1.Utils.itemFromArray(modeAbsorbers);\n          }\n        } else {\n          absorbersModeOptions = modeAbsorbers;\n        }\n\n        var absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : absorberOptions instanceof Array ? Utils_1.Utils.itemFromArray(absorberOptions) : absorberOptions;\n        var aPosition = container.interactivity.mouse.clickPosition;\n        var absorber = new AbsorberInstance_1.AbsorberInstance(this, this.container, absorbersOptions, aPosition);\n        this.addAbsorber(absorber);\n      }\n    }\n  }, {\n    key: \"addAbsorber\",\n    value: function addAbsorber(absorber) {\n      this.array.push(absorber);\n    }\n  }, {\n    key: \"removeAbsorber\",\n    value: function removeAbsorber(absorber) {\n      var index = this.array.indexOf(absorber);\n\n      if (index >= 0) {\n        this.array.splice(index, 1);\n      }\n    }\n  }]);\n\n  return Absorbers;\n}();\n\nexports.Absorbers = Absorbers;","map":{"version":3,"sources":["/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/tsparticles/dist/Plugins/Absorbers/Absorbers.js"],"names":["Object","defineProperty","exports","value","Absorbers","AbsorberInstance_1","require","Utils_1","Absorber_1","Enums_1","container","array","absorbers","interactivityAbsorbers","options","_a","_b","Array","map","s","tmp","Absorber","load","interactivity","modes","absorberOptions","absorber","AbsorberInstance","addAbsorber","particle","attract","destroyed","context","save","draw","restore","resize","mode","modeAbsorbers","AbsorberClickMode","absorbersModeOptions","length","Utils","itemFromArray","absorbersOptions","aPosition","mouse","clickPosition","push","index","indexOf","splice"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Absorbers = void 0;\nconst AbsorberInstance_1 = require(\"./AbsorberInstance\");\nconst Utils_1 = require(\"../../Utils\");\nconst Absorber_1 = require(\"./Options/Classes/Absorber\");\nconst Enums_1 = require(\"./Enums\");\nclass Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n    }\n    init(options) {\n        var _a, _b;\n        if (!options) {\n            return;\n        }\n        if (options.absorbers) {\n            if (options.absorbers instanceof Array) {\n                this.absorbers = options.absorbers.map((s) => {\n                    const tmp = new Absorber_1.Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.absorbers instanceof Array) {\n                    this.absorbers = new Absorber_1.Absorber();\n                }\n                this.absorbers.load(options.absorbers);\n            }\n        }\n        const interactivityAbsorbers = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n        if (interactivityAbsorbers) {\n            if (interactivityAbsorbers instanceof Array) {\n                this.interactivityAbsorbers = interactivityAbsorbers.map((s) => {\n                    const tmp = new Absorber_1.Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.interactivityAbsorbers instanceof Array) {\n                    this.interactivityAbsorbers = new Absorber_1.Absorber();\n                }\n                this.interactivityAbsorbers.load(interactivityAbsorbers);\n            }\n        }\n        if (this.absorbers instanceof Array) {\n            for (const absorberOptions of this.absorbers) {\n                const absorber = new AbsorberInstance_1.AbsorberInstance(this, this.container, absorberOptions);\n                this.addAbsorber(absorber);\n            }\n        }\n        else {\n            const absorberOptions = this.absorbers;\n            const absorber = new AbsorberInstance_1.AbsorberInstance(this, this.container, absorberOptions);\n            this.addAbsorber(absorber);\n        }\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            context.save();\n            absorber.draw(context);\n            context.restore();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    handleClickMode(mode) {\n        const container = this.container;\n        const absorberOptions = this.absorbers;\n        const modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === Enums_1.AbsorberClickMode.absorber) {\n            let absorbersModeOptions;\n            if (modeAbsorbers instanceof Array) {\n                if (modeAbsorbers.length > 0) {\n                    absorbersModeOptions = Utils_1.Utils.itemFromArray(modeAbsorbers);\n                }\n            }\n            else {\n                absorbersModeOptions = modeAbsorbers;\n            }\n            const absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : (absorberOptions instanceof Array ? Utils_1.Utils.itemFromArray(absorberOptions) : absorberOptions);\n            const aPosition = container.interactivity.mouse.clickPosition;\n            const absorber = new AbsorberInstance_1.AbsorberInstance(this, this.container, absorbersOptions, aPosition);\n            this.addAbsorber(absorber);\n        }\n    }\n    addAbsorber(absorber) {\n        this.array.push(absorber);\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n}\nexports.Absorbers = Absorbers;\n"]},"metadata":{},"sourceType":"script"}