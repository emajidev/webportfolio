{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Linker = void 0;\n\nvar Utils_1 = require(\"../../../../Utils\");\n\nvar Linker = /*#__PURE__*/function () {\n  function Linker(container) {\n    _classCallCheck(this, Linker);\n\n    this.container = container;\n  }\n\n  _createClass(Linker, [{\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return particle.particlesOptions.links.enable;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }, {\n    key: \"interact\",\n    value: function interact(p1) {\n      var _a;\n\n      var container = this.container;\n      var linkOpt1 = p1.particlesOptions.links;\n      var optOpacity = linkOpt1.opacity;\n      var optDistance = (_a = p1.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\n      var canvasSize = container.canvas.size;\n      var warp = linkOpt1.warp;\n      var pos1 = p1.getPosition();\n      var range = warp ? new Utils_1.CircleWarp(pos1.x, pos1.y, optDistance, canvasSize) : new Utils_1.Circle(pos1.x, pos1.y, optDistance);\n      var query = container.particles.quadTree.query(range);\n\n      var _iterator = _createForOfIteratorHelper(query),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var p2 = _step.value;\n          var linkOpt2 = p2.particlesOptions.links;\n\n          if (p1 === p2 || !linkOpt2.enable || linkOpt1.id !== linkOpt2.id) {\n            continue;\n          }\n\n          var pos2 = p2.getPosition();\n          var distance = Utils_1.Utils.getDistance(pos1, pos2);\n\n          if (warp) {\n            if (distance > optDistance) {\n              var pos2NE = {\n                x: pos2.x - canvasSize.width,\n                y: pos2.y\n              };\n              distance = Utils_1.Utils.getDistance(pos1, pos2NE);\n\n              if (distance > optDistance) {\n                var pos2SE = {\n                  x: pos2.x - canvasSize.width,\n                  y: pos2.y - canvasSize.height\n                };\n                distance = Utils_1.Utils.getDistance(pos1, pos2SE);\n\n                if (distance > optDistance) {\n                  var pos2SW = {\n                    x: pos2.x,\n                    y: pos2.y - canvasSize.height\n                  };\n                  distance = Utils_1.Utils.getDistance(pos1, pos2SW);\n                }\n              }\n            }\n          }\n\n          if (distance > optDistance) {\n            return;\n          }\n\n          var opacityLine = optOpacity - distance * optOpacity / optDistance;\n\n          if (opacityLine > 0) {\n            var linksOptions = p1.particlesOptions.links;\n            var linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n\n            if (!linkColor) {\n              var optColor = linksOptions.color;\n              var color = typeof optColor === \"string\" ? optColor : optColor.value;\n\n              if (color === Utils_1.Constants.randomColorValue) {\n                if (linksOptions.consent) {\n                  linkColor = Utils_1.ColorUtils.colorToRgb({\n                    value: color\n                  });\n                } else if (linksOptions.blink) {\n                  linkColor = Utils_1.Constants.randomColorValue;\n                } else {\n                  linkColor = Utils_1.Constants.midColorValue;\n                }\n              } else {\n                linkColor = Utils_1.ColorUtils.colorToRgb({\n                  value: color\n                });\n              }\n\n              if (linksOptions.id !== undefined) {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n              } else {\n                container.particles.linksColor = linkColor;\n              }\n            }\n\n            if (p2.links.map(function (t) {\n              return t.destination;\n            }).indexOf(p1) === -1 && p1.links.map(function (t) {\n              return t.destination;\n            }).indexOf(p2) === -1) {\n              p1.links.push({\n                destination: p2,\n                opacity: opacityLine\n              });\n            }\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }]);\n\n  return Linker;\n}();\n\nexports.Linker = Linker;","map":{"version":3,"sources":["/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Linker.js"],"names":["Object","defineProperty","exports","value","Linker","Utils_1","require","container","particle","particlesOptions","links","enable","p1","_a","linkOpt1","optOpacity","opacity","optDistance","linksDistance","retina","canvasSize","canvas","size","warp","pos1","getPosition","range","CircleWarp","x","y","Circle","query","particles","quadTree","p2","linkOpt2","id","pos2","distance","Utils","getDistance","pos2NE","width","pos2SE","height","pos2SW","opacityLine","linksOptions","linkColor","undefined","linksColors","get","linksColor","optColor","color","Constants","randomColorValue","consent","ColorUtils","colorToRgb","blink","midColorValue","set","map","t","destination","indexOf","push"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Linker = void 0;\nconst Utils_1 = require(\"../../../../Utils\");\nclass Linker {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled(particle) {\n        return particle.particlesOptions.links.enable;\n    }\n    reset() {\n    }\n    interact(p1) {\n        var _a;\n        const container = this.container;\n        const linkOpt1 = p1.particlesOptions.links;\n        const optOpacity = linkOpt1.opacity;\n        const optDistance = (_a = p1.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\n        const canvasSize = container.canvas.size;\n        const warp = linkOpt1.warp;\n        const pos1 = p1.getPosition();\n        const range = warp\n            ? new Utils_1.CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Utils_1.Circle(pos1.x, pos1.y, optDistance);\n        const query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.particlesOptions.links;\n            if (p1 === p2 || !linkOpt2.enable || linkOpt1.id !== linkOpt2.id) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            let distance = Utils_1.Utils.getDistance(pos1, pos2);\n            if (warp) {\n                if (distance > optDistance) {\n                    const pos2NE = {\n                        x: pos2.x - canvasSize.width,\n                        y: pos2.y,\n                    };\n                    distance = Utils_1.Utils.getDistance(pos1, pos2NE);\n                    if (distance > optDistance) {\n                        const pos2SE = {\n                            x: pos2.x - canvasSize.width,\n                            y: pos2.y - canvasSize.height,\n                        };\n                        distance = Utils_1.Utils.getDistance(pos1, pos2SE);\n                        if (distance > optDistance) {\n                            const pos2SW = {\n                                x: pos2.x,\n                                y: pos2.y - canvasSize.height,\n                            };\n                            distance = Utils_1.Utils.getDistance(pos1, pos2SW);\n                        }\n                    }\n                }\n            }\n            if (distance > optDistance) {\n                return;\n            }\n            const opacityLine = optOpacity - (distance * optOpacity) / optDistance;\n            if (opacityLine > 0) {\n                const linksOptions = p1.particlesOptions.links;\n                let linkColor = linksOptions.id !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                if (!linkColor) {\n                    const optColor = linksOptions.color;\n                    const color = typeof optColor === \"string\" ? optColor : optColor.value;\n                    if (color === Utils_1.Constants.randomColorValue) {\n                        if (linksOptions.consent) {\n                            linkColor = Utils_1.ColorUtils.colorToRgb({\n                                value: color,\n                            });\n                        }\n                        else if (linksOptions.blink) {\n                            linkColor = Utils_1.Constants.randomColorValue;\n                        }\n                        else {\n                            linkColor = Utils_1.Constants.midColorValue;\n                        }\n                    }\n                    else {\n                        linkColor = Utils_1.ColorUtils.colorToRgb({\n                            value: color,\n                        });\n                    }\n                    if (linksOptions.id !== undefined) {\n                        container.particles.linksColors.set(linksOptions.id, linkColor);\n                    }\n                    else {\n                        container.particles.linksColor = linkColor;\n                    }\n                }\n                if (p2.links.map((t) => t.destination).indexOf(p1) === -1 &&\n                    p1.links.map((t) => t.destination).indexOf(p2) === -1) {\n                    p1.links.push({\n                        destination: p2,\n                        opacity: opacityLine,\n                    });\n                }\n            }\n        }\n    }\n}\nexports.Linker = Linker;\n"]},"metadata":{},"sourceType":"script"}