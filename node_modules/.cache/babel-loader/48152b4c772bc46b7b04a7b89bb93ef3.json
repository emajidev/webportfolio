{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Infecter = void 0;\n\nvar Infecter = /*#__PURE__*/function () {\n  function Infecter(container, particle) {\n    _classCallCheck(this, Infecter);\n\n    this.container = container;\n    this.particle = particle;\n  }\n\n  _createClass(Infecter, [{\n    key: \"startInfection\",\n    value: function startInfection(stage) {\n      var container = this.container;\n      var options = container.options;\n      var stages = options.infection.stages;\n      var stagesCount = stages.length;\n\n      if (stage > stagesCount || stage < 0) {\n        return;\n      }\n\n      this.infectionDelay = 0;\n      this.infectionDelayStage = stage;\n    }\n  }, {\n    key: \"updateInfectionStage\",\n    value: function updateInfectionStage(stage) {\n      var container = this.container;\n      var options = container.options;\n      var stagesCount = options.infection.stages.length;\n\n      if (stage > stagesCount || stage < 0 || this.infectionStage !== undefined && this.infectionStage > stage) {\n        return;\n      }\n\n      this.infectionStage = stage;\n      this.infectionTime = 0;\n    }\n  }, {\n    key: \"updateInfection\",\n    value: function updateInfection(delta) {\n      var options = this.container.options;\n      var infection = options.infection;\n      var stages = options.infection.stages;\n      var stagesCount = stages.length;\n\n      if (this.infectionDelay !== undefined && this.infectionDelayStage !== undefined) {\n        var stage = this.infectionDelayStage;\n\n        if (stage > stagesCount || stage < 0) {\n          return;\n        }\n\n        if (this.infectionDelay > infection.delay * 1000) {\n          this.infectionStage = stage;\n          this.infectionTime = 0;\n          delete this.infectionDelay;\n          delete this.infectionDelayStage;\n        } else {\n          this.infectionDelay += delta;\n        }\n      } else {\n        delete this.infectionDelay;\n        delete this.infectionDelayStage;\n      }\n\n      if (this.infectionStage !== undefined && this.infectionTime !== undefined) {\n        var infectionStage = stages[this.infectionStage];\n\n        if (infectionStage.duration !== undefined && infectionStage.duration >= 0) {\n          if (this.infectionTime > infectionStage.duration * 1000) {\n            this.nextInfectionStage();\n          } else {\n            this.infectionTime += delta;\n          }\n        } else {\n          this.infectionTime += delta;\n        }\n      } else {\n        delete this.infectionStage;\n        delete this.infectionTime;\n      }\n    }\n  }, {\n    key: \"nextInfectionStage\",\n    value: function nextInfectionStage() {\n      var options = this.container.options;\n      var stagesCount = options.infection.stages.length;\n\n      if (stagesCount <= 0 || this.infectionStage === undefined) {\n        return;\n      }\n\n      this.infectionTime = 0;\n\n      if (stagesCount <= ++this.infectionStage) {\n        if (options.infection.cure) {\n          delete this.infectionStage;\n          delete this.infectionTime;\n          return;\n        } else {\n          this.infectionStage = 0;\n          this.infectionTime = 0;\n        }\n      }\n    }\n  }]);\n\n  return Infecter;\n}();\n\nexports.Infecter = Infecter;","map":{"version":3,"sources":["/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/tsparticles/dist/Core/Particle/Infecter.js"],"names":["Object","defineProperty","exports","value","Infecter","container","particle","stage","options","stages","infection","stagesCount","length","infectionDelay","infectionDelayStage","infectionStage","undefined","infectionTime","delta","delay","duration","nextInfectionStage","cure"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Infecter = void 0;\nclass Infecter {\n    constructor(container, particle) {\n        this.container = container;\n        this.particle = particle;\n    }\n    startInfection(stage) {\n        const container = this.container;\n        const options = container.options;\n        const stages = options.infection.stages;\n        const stagesCount = stages.length;\n        if (stage > stagesCount || stage < 0) {\n            return;\n        }\n        this.infectionDelay = 0;\n        this.infectionDelayStage = stage;\n    }\n    updateInfectionStage(stage) {\n        const container = this.container;\n        const options = container.options;\n        const stagesCount = options.infection.stages.length;\n        if (stage > stagesCount || stage < 0 || (this.infectionStage !== undefined && this.infectionStage > stage)) {\n            return;\n        }\n        this.infectionStage = stage;\n        this.infectionTime = 0;\n    }\n    updateInfection(delta) {\n        const options = this.container.options;\n        const infection = options.infection;\n        const stages = options.infection.stages;\n        const stagesCount = stages.length;\n        if (this.infectionDelay !== undefined && this.infectionDelayStage !== undefined) {\n            const stage = this.infectionDelayStage;\n            if (stage > stagesCount || stage < 0) {\n                return;\n            }\n            if (this.infectionDelay > infection.delay * 1000) {\n                this.infectionStage = stage;\n                this.infectionTime = 0;\n                delete this.infectionDelay;\n                delete this.infectionDelayStage;\n            }\n            else {\n                this.infectionDelay += delta;\n            }\n        }\n        else {\n            delete this.infectionDelay;\n            delete this.infectionDelayStage;\n        }\n        if (this.infectionStage !== undefined && this.infectionTime !== undefined) {\n            const infectionStage = stages[this.infectionStage];\n            if (infectionStage.duration !== undefined && infectionStage.duration >= 0) {\n                if (this.infectionTime > infectionStage.duration * 1000) {\n                    this.nextInfectionStage();\n                }\n                else {\n                    this.infectionTime += delta;\n                }\n            }\n            else {\n                this.infectionTime += delta;\n            }\n        }\n        else {\n            delete this.infectionStage;\n            delete this.infectionTime;\n        }\n    }\n    nextInfectionStage() {\n        const options = this.container.options;\n        const stagesCount = options.infection.stages.length;\n        if (stagesCount <= 0 || this.infectionStage === undefined) {\n            return;\n        }\n        this.infectionTime = 0;\n        if (stagesCount <= ++this.infectionStage) {\n            if (options.infection.cure) {\n                delete this.infectionStage;\n                delete this.infectionTime;\n                return;\n            }\n            else {\n                this.infectionStage = 0;\n                this.infectionTime = 0;\n            }\n        }\n    }\n}\nexports.Infecter = Infecter;\n"]},"metadata":{},"sourceType":"script"}