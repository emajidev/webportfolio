{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorUtils = void 0;\n\nvar Utils_1 = require(\"./Utils\");\n\nvar Constants_1 = require(\"./Constants\");\n\nvar ColorUtils = /*#__PURE__*/function () {\n  function ColorUtils() {\n    _classCallCheck(this, ColorUtils);\n  }\n\n  _createClass(ColorUtils, null, [{\n    key: \"colorToRgb\",\n    value: function colorToRgb(input) {\n      var _a, _b;\n\n      if (input === undefined) {\n        return;\n      }\n\n      var color = typeof input === \"string\" ? {\n        value: input\n      } : input;\n      var res;\n\n      if (typeof color.value === \"string\") {\n        if (color.value === Constants_1.Constants.randomColorValue) {\n          res = this.getRandomRgbColor();\n        } else {\n          res = ColorUtils.stringToRgb(color.value);\n        }\n      } else {\n        if (color.value instanceof Array) {\n          var colorSelected = Utils_1.Utils.itemFromArray(color.value);\n          res = ColorUtils.colorToRgb({\n            value: colorSelected\n          });\n        } else {\n          var colorValue = color.value;\n          var rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n\n          if (rgbColor.r !== undefined) {\n            res = rgbColor;\n          } else {\n            var hslColor = (_b = colorValue.hsl) !== null && _b !== void 0 ? _b : color.value;\n\n            if (hslColor.h !== undefined) {\n              res = ColorUtils.hslToRgb(hslColor);\n            }\n          }\n        }\n      }\n\n      return res;\n    }\n  }, {\n    key: \"colorToHsl\",\n    value: function colorToHsl(color) {\n      var rgb = this.colorToRgb(color);\n      return rgb !== undefined ? this.rgbToHsl(rgb) : rgb;\n    }\n  }, {\n    key: \"rgbToHsl\",\n    value: function rgbToHsl(color) {\n      var r1 = color.r / 255;\n      var g1 = color.g / 255;\n      var b1 = color.b / 255;\n      var max = Math.max(r1, g1, b1);\n      var min = Math.min(r1, g1, b1);\n      var res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0\n      };\n\n      if (max != min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h = r1 === max ? (g1 - b1) / (max - min) : res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min);\n      }\n\n      res.l *= 100;\n      res.s *= 100;\n      res.h *= 60;\n\n      if (res.h < 0) {\n        res.h += 360;\n      }\n\n      return res;\n    }\n  }, {\n    key: \"stringToAlpha\",\n    value: function stringToAlpha(input) {\n      var _a;\n\n      return (_a = ColorUtils.stringToRgba(input)) === null || _a === void 0 ? void 0 : _a.a;\n    }\n  }, {\n    key: \"stringToRgb\",\n    value: function stringToRgb(input) {\n      return ColorUtils.stringToRgba(input);\n    }\n  }, {\n    key: \"hslToRgb\",\n    value: function hslToRgb(hsl) {\n      var result = {\n        b: 0,\n        g: 0,\n        r: 0\n      };\n      var hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100\n      };\n\n      if (hslPercent.s === 0) {\n        result.b = hslPercent.l;\n        result.g = hslPercent.l;\n        result.r = hslPercent.l;\n      } else {\n        var q = hslPercent.l < 0.5 ? hslPercent.l * (1 + hslPercent.s) : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s;\n        var p = 2 * hslPercent.l - q;\n        result.r = ColorUtils.hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = ColorUtils.hue2rgb(p, q, hslPercent.h);\n        result.b = ColorUtils.hue2rgb(p, q, hslPercent.h - 1 / 3);\n      }\n\n      result.r = Math.floor(result.r * 255);\n      result.g = Math.floor(result.g * 255);\n      result.b = Math.floor(result.b * 255);\n      return result;\n    }\n  }, {\n    key: \"hslaToRgba\",\n    value: function hslaToRgba(hsla) {\n      var rgbResult = ColorUtils.hslToRgb(hsla);\n      return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r\n      };\n    }\n  }, {\n    key: \"getRandomRgbColor\",\n    value: function getRandomRgbColor(min) {\n      var fixedMin = min !== null && min !== void 0 ? min : 0;\n      return {\n        b: Math.floor(Utils_1.Utils.randomInRange(fixedMin, 256)),\n        g: Math.floor(Utils_1.Utils.randomInRange(fixedMin, 256)),\n        r: Math.floor(Utils_1.Utils.randomInRange(fixedMin, 256))\n      };\n    }\n  }, {\n    key: \"getStyleFromRgb\",\n    value: function getStyleFromRgb(color, opacity) {\n      return \"rgba(\".concat(color.r, \", \").concat(color.g, \", \").concat(color.b, \", \").concat(opacity !== null && opacity !== void 0 ? opacity : 1, \")\");\n    }\n  }, {\n    key: \"getStyleFromHsl\",\n    value: function getStyleFromHsl(color, opacity) {\n      return \"hsla(\".concat(color.h, \", \").concat(color.s, \"%, \").concat(color.l, \"%, \").concat(opacity !== null && opacity !== void 0 ? opacity : 1, \")\");\n    }\n  }, {\n    key: \"mix\",\n    value: function mix(color1, color2, size1, size2) {\n      var rgb1 = color1;\n      var rgb2 = color2;\n\n      if (rgb1.r === undefined) {\n        rgb1 = this.hslToRgb(color1);\n      }\n\n      if (rgb2.r === undefined) {\n        rgb2 = this.hslToRgb(color2);\n      }\n\n      return {\n        b: Utils_1.Utils.mix(rgb1.b, rgb2.b, size1, size2),\n        g: Utils_1.Utils.mix(rgb1.g, rgb2.g, size1, size2),\n        r: Utils_1.Utils.mix(rgb1.r, rgb2.r, size1, size2)\n      };\n    }\n  }, {\n    key: \"replaceColorSvg\",\n    value: function replaceColorSvg(image, color, opacity) {\n      if (!image.svgData) {\n        return \"\";\n      }\n\n      var svgXml = image.svgData;\n      var rgbHex = /#([0-9A-F]{3,6})/gi;\n      return svgXml.replace(rgbHex, function () {\n        return ColorUtils.getStyleFromHsl(color, opacity);\n      });\n    }\n  }, {\n    key: \"hue2rgb\",\n    value: function hue2rgb(p, q, t) {\n      var tCalc = t;\n\n      if (tCalc < 0) {\n        tCalc += 1;\n      }\n\n      if (tCalc > 1) {\n        tCalc -= 1;\n      }\n\n      if (tCalc < 1 / 6) {\n        return p + (q - p) * 6 * tCalc;\n      }\n\n      if (tCalc < 1 / 2) {\n        return q;\n      }\n\n      if (tCalc < 2 / 3) {\n        return p + (q - p) * (2 / 3 - tCalc) * 6;\n      }\n\n      return p;\n    }\n  }, {\n    key: \"stringToRgba\",\n    value: function stringToRgba(input) {\n      if (input.startsWith(\"rgb\")) {\n        var regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n        var result = regex.exec(input);\n        return result ? {\n          a: result.length > 4 ? parseFloat(result[5]) : 1,\n          b: parseInt(result[3], 10),\n          g: parseInt(result[2], 10),\n          r: parseInt(result[1], 10)\n        } : undefined;\n      } else if (input.startsWith(\"hsl\")) {\n        var _regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n\n        var _result = _regex.exec(input);\n\n        return _result ? ColorUtils.hslaToRgba({\n          a: _result.length > 4 ? parseFloat(_result[5]) : 1,\n          h: parseInt(_result[1], 10),\n          l: parseInt(_result[3], 10),\n          s: parseInt(_result[2], 10)\n        }) : undefined;\n      } else {\n        var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i;\n        var hexFixed = input.replace(shorthandRegex, function (_m, r, g, b, a) {\n          return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n        });\n        var _regex2 = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i;\n\n        var _result2 = _regex2.exec(hexFixed);\n\n        return _result2 ? {\n          a: _result2[4] !== undefined ? parseInt(_result2[4], 16) / 0xff : 1,\n          b: parseInt(_result2[3], 16),\n          g: parseInt(_result2[2], 16),\n          r: parseInt(_result2[1], 16)\n        } : undefined;\n      }\n    }\n  }]);\n\n  return ColorUtils;\n}();\n\nexports.ColorUtils = ColorUtils;","map":{"version":3,"sources":["/home/majidev/Documentos/dev/portfolio/portfolio-emajidev/node_modules/tsparticles/dist/Utils/ColorUtils.js"],"names":["Object","defineProperty","exports","value","ColorUtils","Utils_1","require","Constants_1","input","_a","_b","undefined","color","res","Constants","randomColorValue","getRandomRgbColor","stringToRgb","Array","colorSelected","Utils","itemFromArray","colorToRgb","colorValue","rgbColor","rgb","r","hslColor","hsl","h","hslToRgb","rgbToHsl","r1","g1","g","b1","b","max","Math","min","l","s","stringToRgba","a","result","hslPercent","q","p","hue2rgb","floor","hsla","rgbResult","fixedMin","randomInRange","opacity","color1","color2","size1","size2","rgb1","rgb2","mix","image","svgData","svgXml","rgbHex","replace","getStyleFromHsl","t","tCalc","startsWith","regex","exec","length","parseFloat","parseInt","hslaToRgba","shorthandRegex","hexFixed","_m"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ColorUtils = void 0;\nconst Utils_1 = require(\"./Utils\");\nconst Constants_1 = require(\"./Constants\");\nclass ColorUtils {\n    static colorToRgb(input) {\n        var _a, _b;\n        if (input === undefined) {\n            return;\n        }\n        const color = typeof input === \"string\" ? { value: input } : input;\n        let res;\n        if (typeof color.value === \"string\") {\n            if (color.value === Constants_1.Constants.randomColorValue) {\n                res = this.getRandomRgbColor();\n            }\n            else {\n                res = ColorUtils.stringToRgb(color.value);\n            }\n        }\n        else {\n            if (color.value instanceof Array) {\n                const colorSelected = Utils_1.Utils.itemFromArray(color.value);\n                res = ColorUtils.colorToRgb({ value: colorSelected });\n            }\n            else {\n                const colorValue = color.value;\n                const rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n                if (rgbColor.r !== undefined) {\n                    res = rgbColor;\n                }\n                else {\n                    const hslColor = (_b = colorValue.hsl) !== null && _b !== void 0 ? _b : color.value;\n                    if (hslColor.h !== undefined) {\n                        res = ColorUtils.hslToRgb(hslColor);\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    static colorToHsl(color) {\n        const rgb = this.colorToRgb(color);\n        return rgb !== undefined ? this.rgbToHsl(rgb) : rgb;\n    }\n    static rgbToHsl(color) {\n        const r1 = color.r / 255;\n        const g1 = color.g / 255;\n        const b1 = color.b / 255;\n        const max = Math.max(r1, g1, b1);\n        const min = Math.min(r1, g1, b1);\n        const res = {\n            h: 0,\n            l: (max + min) / 2,\n            s: 0,\n        };\n        if (max != min) {\n            res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n            res.h =\n                r1 === max\n                    ? (g1 - b1) / (max - min)\n                    : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n        }\n        res.l *= 100;\n        res.s *= 100;\n        res.h *= 60;\n        if (res.h < 0) {\n            res.h += 360;\n        }\n        return res;\n    }\n    static stringToAlpha(input) {\n        var _a;\n        return (_a = ColorUtils.stringToRgba(input)) === null || _a === void 0 ? void 0 : _a.a;\n    }\n    static stringToRgb(input) {\n        return ColorUtils.stringToRgba(input);\n    }\n    static hslToRgb(hsl) {\n        const result = { b: 0, g: 0, r: 0 };\n        const hslPercent = {\n            h: hsl.h / 360,\n            l: hsl.l / 100,\n            s: hsl.s / 100,\n        };\n        if (hslPercent.s === 0) {\n            result.b = hslPercent.l;\n            result.g = hslPercent.l;\n            result.r = hslPercent.l;\n        }\n        else {\n            const q = hslPercent.l < 0.5\n                ? hslPercent.l * (1 + hslPercent.s)\n                : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s;\n            const p = 2 * hslPercent.l - q;\n            result.r = ColorUtils.hue2rgb(p, q, hslPercent.h + 1 / 3);\n            result.g = ColorUtils.hue2rgb(p, q, hslPercent.h);\n            result.b = ColorUtils.hue2rgb(p, q, hslPercent.h - 1 / 3);\n        }\n        result.r = Math.floor(result.r * 255);\n        result.g = Math.floor(result.g * 255);\n        result.b = Math.floor(result.b * 255);\n        return result;\n    }\n    static hslaToRgba(hsla) {\n        const rgbResult = ColorUtils.hslToRgb(hsla);\n        return {\n            a: hsla.a,\n            b: rgbResult.b,\n            g: rgbResult.g,\n            r: rgbResult.r,\n        };\n    }\n    static getRandomRgbColor(min) {\n        const fixedMin = min !== null && min !== void 0 ? min : 0;\n        return {\n            b: Math.floor(Utils_1.Utils.randomInRange(fixedMin, 256)),\n            g: Math.floor(Utils_1.Utils.randomInRange(fixedMin, 256)),\n            r: Math.floor(Utils_1.Utils.randomInRange(fixedMin, 256)),\n        };\n    }\n    static getStyleFromRgb(color, opacity) {\n        return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n    }\n    static getStyleFromHsl(color, opacity) {\n        return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n    }\n    static mix(color1, color2, size1, size2) {\n        let rgb1 = color1;\n        let rgb2 = color2;\n        if (rgb1.r === undefined) {\n            rgb1 = this.hslToRgb(color1);\n        }\n        if (rgb2.r === undefined) {\n            rgb2 = this.hslToRgb(color2);\n        }\n        return {\n            b: Utils_1.Utils.mix(rgb1.b, rgb2.b, size1, size2),\n            g: Utils_1.Utils.mix(rgb1.g, rgb2.g, size1, size2),\n            r: Utils_1.Utils.mix(rgb1.r, rgb2.r, size1, size2),\n        };\n    }\n    static replaceColorSvg(image, color, opacity) {\n        if (!image.svgData) {\n            return \"\";\n        }\n        const svgXml = image.svgData;\n        const rgbHex = /#([0-9A-F]{3,6})/gi;\n        return svgXml.replace(rgbHex, () => ColorUtils.getStyleFromHsl(color, opacity));\n    }\n    static hue2rgb(p, q, t) {\n        let tCalc = t;\n        if (tCalc < 0) {\n            tCalc += 1;\n        }\n        if (tCalc > 1) {\n            tCalc -= 1;\n        }\n        if (tCalc < 1 / 6) {\n            return p + (q - p) * 6 * tCalc;\n        }\n        if (tCalc < 1 / 2) {\n            return q;\n        }\n        if (tCalc < 2 / 3) {\n            return p + (q - p) * (2 / 3 - tCalc) * 6;\n        }\n        return p;\n    }\n    static stringToRgba(input) {\n        if (input.startsWith(\"rgb\")) {\n            const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n            const result = regex.exec(input);\n            return result\n                ? {\n                    a: result.length > 4 ? parseFloat(result[5]) : 1,\n                    b: parseInt(result[3], 10),\n                    g: parseInt(result[2], 10),\n                    r: parseInt(result[1], 10),\n                }\n                : undefined;\n        }\n        else if (input.startsWith(\"hsl\")) {\n            const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n            const result = regex.exec(input);\n            return result\n                ? ColorUtils.hslaToRgba({\n                    a: result.length > 4 ? parseFloat(result[5]) : 1,\n                    h: parseInt(result[1], 10),\n                    l: parseInt(result[3], 10),\n                    s: parseInt(result[2], 10),\n                })\n                : undefined;\n        }\n        else {\n            const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i;\n            const hexFixed = input.replace(shorthandRegex, (_m, r, g, b, a) => {\n                return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n            });\n            const regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i;\n            const result = regex.exec(hexFixed);\n            return result\n                ? {\n                    a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n                    b: parseInt(result[3], 16),\n                    g: parseInt(result[2], 16),\n                    r: parseInt(result[1], 16),\n                }\n                : undefined;\n        }\n    }\n}\nexports.ColorUtils = ColorUtils;\n"]},"metadata":{},"sourceType":"script"}